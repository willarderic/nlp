#+title: Homework 3:  Machine Learning for Language Understanding
#+author: Toni Kazic
#+date: Fall, 2023

# <2021-11-16 Tue>


#+SETUPFILE: "../../../common/preamble.org"
#+LATEX_CLASS: article
#+OPTIONS: toc:nil
#+OPTIONS: ^:nil

#+LATEX_HEADER: \usepackage{langsci-avm}
# http://ftp.math.purdue.edu/mirrors/ctan.org/macros/latex/contrib/langsci-avm/langsci-avm.pdf

#+LATEX_HEADER: \newcommand{\grmr}[2]{\ensuremath{\mathrm{#1} & \,\longrightarrow\, \mathrm{#2}}}
#+LATEX_HEADER: \newcommand{\txtgrmr}[2]{\ensuremath{\mathrm{#1} \,\longrightarrow\, \mathrm{#2}}}
#+LATEX_HEADER: \newcommand{\grmrhs}[1]{\ensuremath{& \,\longrightarrow\, \mathrm{#1} }}
#+LATEX_HEADER: \newcommand{\wa}[1]{\type{\textnormal{\w{#1}}}}

# compile with pdflatex
#
# Kazic, 3.11.2020



* DONE Introduction

This homework explores the course objective of understanding and
generating machine learning approaches, taking us into (shallow) machine
learning for language understanding. This will give us a chance to consider
the problem of usefully embedding language in numerically defined spaces,
giving us a chance to compare a seat-of-the-pants approach to the more
sophisticated ones we discussed in class.  It also gives us an opportunity
to compare different classifiers for different corpora and get an idea of
how well they perform.


NLTK has some classifiers, but [[http://scikit-learn.org/stable/user_guide.html][scikit-learn]] has more (so be sure to install
any needed modules!).  Let's jump off the deep end together and see how
far we can get.



# We'll revisit the feature extraction problem in the future, so
# this homework explores how well guessed features perform.

# At the end we look briefly at checking coherence using bags of
# words (see [[http://www.nltk.org/book/ch06.html][Section 2.3 ff]] for a short discussion and examples).  This is
# one technique for recognizing textual entailment.




* DONE Who's Who and Solution Patterns
<<whoswho>>



** Group Members

| first name last name | color                         |
|----------------------+-------------------------------|
| Eric                 | green \color{green}\rule{5mm}{3mm} |
| Polycarp             | yellow \color{yellow}\rule{5mm}{3mm} |
| Santhosh             | purple \color{violet}\rule{5mm}{3mm} |



** *Special Instructions for this Homework!*

All group members are to work on problem 6 together.  I want you to have
enough scope to play around with the embeddings and clustering algorithms.



** Two Member Solution Patterns

| color                         | draft solution | revise solution |
|-------------------------------+----------------+-----------------|
| green \color{green}\rule{5mm}{3mm} | odds           | evens           |
| yellow \color{yellow}\rule{5mm}{3mm} | evens          | odds            |


** Three Member Solution Patterns

$i$ is the question number.

#+begin_center
#+ATTR_LaTeX: :mode inline-math :environment array
| \text{color}                  | \text{draft solution} | \text{revise solution} |
|-------------------------------+----------------+-----------------|
| green \color{green}\rule{5mm}{3mm} | i \mod 3 = 1   | i \mod 3 = 0    |
| yellow \color{yellow}\rule{5mm}{3mm} | i \mod 3 = 2   | i \mod 3 = 1    |
| purple \color{violet}\rule{5mm}{3mm} | i \mod 3 = 0   | i \mod 3 = 2    |
#+end_center


* DONE General Instructions
  + /Fill out the group members table and follow the solution patterns/ in
     Section [[whoswho]].

   + /If the question is unclear, tell me your interpretation of it as part
     of your answer./  Feel free to ask about the questions in class or on
     the Slack channel (use =@channel= as others will probably be puzzled
     too). 

   + /For questions using corpora, use the corpus of the lead person./

   + /Put your draft answers right after each question using a *complete,
     functional* =org= mode code or example block./ Make sure your code
     block is complete and functional by testing it in your copy of this
     homework file.

   + /Each group member reviews the others' draft solutions and you revise them together/.

   + /Discuss each other's draft and reviews, finalizing the answers./

   + /Show all your work: code, results, and analysis./  Does your code
     work in this file and produce *exactly* the results you show? 

   + /Post the completed file to Canvas no later than noon on the Tuesday
     indicated/ in the [[../syllabus.org::schedule][schedule in the syllabus]], naming your file with each
     person's first name (no spaces in the file name, and don't forget the
     =.org= extension!).  Only one person should submit the final file.


* DONE Hints

** use scikit-learn/sklearn for the ML parts rather than NLTK
  

** joblib.dump() and joblib.load()

Note that for big data, the [[http://scikit-learn.org/stable/tutorial/basic/tutorial.html][scikit-learn tutorial]] suggests using
joblib.dump() and joblib.load().  However this only writes to disk, not a
string, but can store models and classifiers.


** I expect you to bring questions and struggles with problems 4 and 5 to class!


** You may need to reformat the data generated by NLTK for the [[http://scikit-learn.org/stable/modules/feature_extraction.html][scikit-learn code]].


** You may need to cope with [[http://scikit-learn.org/stable/auto_examples/text/document_classification_20newsgroups.html#sphx-glr-auto-examples-text-document-classification-20newsgroups-py][sparse data]] in scikit-learn.

One reason to use the universal tagset is that it doesn't have very many
tags, but depending on your corpus, your suffixes may have more than is
really desirable for problem 4.




* DONE Questions

# specify POS tags in f23!  I mean these throughout

1. [@1] <<tagging>> Randomly select 1000 POS-tagged words from your assigned
   category/corpus and form your training and testing sets so that you
   train on 90% of the words and test on 10%.  Save these somehow so you
   can re-use them in the [[fea-set][next]] problem. Use the universal POS tagset. *If your
   corpus isn't tagged, choose a tagged corpus.* Using a tagger to tag it
   won't help much as it doesn't make a gold standard (that requires
   hand-checking by expert grammarians).
#+begin_src python :results output
#+begin_src python :results output
import nltk
import random
from nltk.corpus import brown

words = brown.tagged_words(categories='fiction', tagset='universal')
# Random seed so we always get the same output from the random sample
random.seed(a=7740)
data_set = random.sample(list(words), 1000)
print(data_set)
train = data_set[:900]
test = data_set[900:]
print(f"Training set: {len(train)} | {train}")
print(f"Testing set: {len(test)} | {test}")
#+end_src

#+results:
: [('house', 'NOUN'), ('bet', 'VERB'), ('the', 'DET'), ('hotels', 'NOUN'), ('and', 'CONJ'), ('broke', 'VERB'), ('about', 'ADV'), ('a', 'DET'), ('phrase', 'NOUN'), ('no', 'DET'), ('just', 'ADV'), ('of', 'ADP'), ('in', 'ADP'), ('the', 'DET'), ('to', 'PRT'), ('questions', 'NOUN'), ('The', 'DET'), ('No', 'ADV'), ('it', 'PRON'), ('.', '.'), ('``', '.'), ('of', 'ADP'), ('door', 'NOUN'), ('toward', 'ADP'), ('the', 'DET'), ('ice-chest', 'NOUN'), ('worry', 'VERB'), (',', '.'), ('.', '.'), ('happen', 'VERB'), ('.', '.'), ('childhood', 'NOUN'), ('to', 'PRT'), ('so', 'ADV'), ('If', 'ADP'), ('New', 'ADJ'), ('more', 'ADV'), ('south', 'NOUN'), ('gouged', 'VERB'), ("ain't", 'VERB'), ('panic', 'NOUN'), (';', '.'), ('of', 'ADP'), ('.', '.'), ('in', 'ADP'), ('look', 'NOUN'), ('this', 'DET'), ('better', 'ADV'), ('nothing', 'NOUN'), ('I', 'PRON'), ('center', 'NOUN'), ('with', 'ADP'), ('.', '.'), ('waiting', 'VERB'), ('.', '.'), ('bed', 'NOUN'), ('young', 'ADJ'), (':', '.'), ('all', 'PRT'), ('That', 'DET'), ('and', 'CONJ'), ('fatigue', 'NOUN'), ('will', 'VERB'), ('taken', 'VERB'), ('a', 'DET'), ('unbroken', 'ADJ'), ('drawings', 'NOUN'), ('I', 'PRON'), ('was', 'VERB'), ('a', 'DET'), ('.', '.'), ('was', 'VERB'), ('at', 'ADP'), (',', '.'), ('Anthony', 'NOUN'), ('``', '.'), ('had', 'VERB'), ('that', 'ADP'), ('under', 'ADP'), ('he', 'PRON'), ('While', 'ADP'), ('certainly', 'ADV'), ('house', 'NOUN'), ('ran', 'VERB'), ('too', 'ADV'), ('when', 'ADV'), ('``', '.'), ('Catholics', 'NOUN'), ('him', 'PRON'), ('preaching', 'VERB'), ('for', 'ADP'), ('mining', 'VERB'), ('ring', 'NOUN'), ('over', 'ADP'), ('the', 'DET'), ('kind', 'NOUN'), ('.', '.'), ('``', '.'), ('He', 'PRON'), ('ground', 'NOUN'), ('to', 'PRT'), ('this', 'DET'), ('.', '.'), ('The', 'DET'), ("''", '.'), ('cover', 'NOUN'), ('patronne', 'X'), ('flick', 'NOUN'), ('that', 'DET'), ('Connections', 'NOUN'), ('were', 'VERB'), ('needles', 'NOUN'), ('the', 'DET'), ('say', 'VERB'), ('.', '.'), ('ready', 'ADJ'), ('myself', 'PRON'), ('but', 'CONJ'), ('it', 'PRON'), ('I', 'PRON'), ('.', '.'), ('just', 'ADV'), ('about', 'ADP'), ('sketching', 'VERB'), ('and', 'CONJ'), ('yellowing', 'VERB'), ('she', 'PRON'), ('Five', 'NUM'), ('the', 'DET'), ('the', 'DET'), ("o'clock", 'ADV'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('ducks', 'NOUN'), ('into', 'ADP'), ('necessary', 'ADJ'), ('whereas', 'ADP'), ('time', 'NOUN'), ('presence', 'NOUN'), ('desires', 'NOUN'), (',', '.'), ('years', 'NOUN'), ('reply', 'NOUN'), ('autumn', 'NOUN'), ('down', 'PRT'), ('read', 'VERB'), ('what', 'DET'), ('.', '.'), ('dumped', 'VERB'), ('things', 'NOUN'), ('cleaned', 'VERB'), ('expected', 'VERB'), ('him', 'PRON'), ('before', 'ADP'), ('my', 'DET'), ('.', '.'), ('in', 'ADP'), ('sold', 'VERB'), ('Argiento', 'NOUN'), ('rent', 'NOUN'), ('.', '.'), ('on', 'ADP'), ('head', 'NOUN'), ('meaning', 'NOUN'), ('conduct', 'NOUN'), ('was', 'VERB'), ('had', 'VERB'), ('.', '.'), ('while', 'ADP'), ('.', '.'), ('is', 'VERB'), ('seeming', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('a', 'DET'), ('girl', 'NOUN'), ("Jack's", 'NOUN'), ('Miss', 'NOUN'), ('He', 'PRON'), ('Warsaw', 'NOUN'), ('are', 'VERB'), ('lights', 'NOUN'), ('to', 'PRT'), ("one's", 'NOUN'), ('abed', 'ADV'), ("''", '.'), ('her', 'DET'), ('.', '.'), ('seemed', 'VERB'), ('start', 'VERB'), ('among', 'ADP'), ('skin', 'NOUN'), ('could', 'VERB'), ('be', 'VERB'), ('thick', 'ADJ'), ('plates', 'NOUN'), ('fine-looking', 'ADJ'), (',', '.'), ('in', 'ADP'), ('early', 'ADV'), ('a', 'DET'), ('.', '.'), ('been', 'VERB'), ('would', 'VERB'), ("''", '.'), (',', '.'), ('.', '.'), ('do', 'VERB'), ('Here', 'ADV'), ('and', 'CONJ'), ('hurry', 'NOUN'), ('thought', 'VERB'), ('a', 'DET'), ('she', 'PRON'), ('wedding', 'NOUN'), ('make', 'VERB'), ('neglected', 'VERB'), ('whiskey', 'NOUN'), ('one', 'NUM'), ('a', 'DET'), ('She', 'PRON'), ('what', 'DET'), ('he', 'PRON'), ('however', 'ADV'), (',', '.'), ('it', 'PRON'), ('far', 'ADV'), ('smile', 'NOUN'), ('a', 'DET'), ('the', 'DET'), ('calumny', 'NOUN'), ('the', 'DET'), ('.', '.'), ('marble', 'NOUN'), ('Bowman', 'NOUN'), ('into', 'ADP'), ('clothes', 'NOUN'), ('the', 'DET'), (',', '.'), ('chose', 'VERB'), ('floor', 'NOUN'), ('how', 'ADV'), ('hand', 'NOUN'), ('He', 'PRON'), ('make', 'VERB'), ('While', 'ADP'), ('you', 'PRON'), ('of', 'ADP'), ('and', 'CONJ'), ('``', '.'), ('of', 'ADP'), ('Oh', 'PRT'), ('married', 'VERB'), ('Council', 'NOUN'), ('borrowed', 'VERB'), ('as', 'ADP'), ('like', 'ADP'), ('What', 'DET'), ('what', 'DET'), (',', '.'), ('become', 'VERB'), ('seem', 'VERB'), ('.', '.'), ('identity', 'NOUN'), (',', '.'), ('in', 'ADP'), ('went', 'VERB'), (',', '.'), ('Your', 'DET'), ('and', 'CONJ'), ("''", '.'), ('complete', 'ADJ'), ('if', 'ADP'), (',', '.'), ('three', 'NUM'), ('she', 'PRON'), ('Rector', 'NOUN'), ('knowing', 'VERB'), ('to', 'PRT'), ('cabins', 'NOUN'), ('maybe', 'ADV'), ('milk', 'NOUN'), ('no', 'DET'), ('bedroom', 'NOUN'), ('the', 'DET'), ('postmark', 'NOUN'), ('waded', 'VERB'), ('one', 'NUM'), ('.', '.'), ('here', 'ADV'), ('pitcher', 'NOUN'), ('his', 'DET'), ('grunt', 'VERB'), ('.', '.'), ('shook', 'VERB'), ('Seventh', 'ADJ'), ('even', 'ADV'), ('grounds', 'NOUN'), ("''", '.'), ('beset', 'VERB'), ('in', 'ADP'), (',', '.'), ('smoked', 'VERB'), ('it', 'PRON'), (',', '.'), ('afterward', 'ADV'), ('progress', 'NOUN'), ('being', 'VERB'), ('and', 'CONJ'), ('a', 'DET'), ('saw', 'VERB'), ("''", '.'), ('and', 'CONJ'), ('nuns', 'NOUN'), ('church', 'NOUN'), ('above', 'ADV'), ('took', 'VERB'), ('the', 'DET'), ('.', '.'), ('.', '.'), ('climbed', 'VERB'), ('not', 'ADV'), ('in', 'ADP'), ('her', 'PRON'), ('a', 'DET'), ('the', 'DET'), ('top', 'NOUN'), ('Thelma', 'NOUN'), ('worked', 'VERB'), ('placed', 'VERB'), ('to', 'ADP'), ('and', 'CONJ'), ('Lying', 'VERB'), ('his', 'DET'), ('fork', 'NOUN'), ('willya', 'VERB'), ('amount', 'NOUN'), ('himself', 'PRON'), (',', '.'), ('Papa', 'NOUN'), ('of', 'ADP'), ("one's", 'NOUN'), ('sick', 'ADJ'), ('into', 'ADP'), ('remained', 'VERB'), (',', '.'), ('Kate', 'NOUN'), ('deserving', 'ADJ'), ('beans', 'NOUN'), ('his', 'DET'), ('hand', 'NOUN'), ('the', 'DET'), ('a', 'DET'), ('He', 'PRON'), ('slapped', 'VERB'), ('whisky', 'NOUN'), ('the', 'DET'), (',', '.'), ('was', 'VERB'), ('poncho', 'NOUN'), ('said', 'VERB'), ('well', 'ADV'), ('wrist', 'NOUN'), ('that', 'ADP'), ('reach', 'VERB'), ('final', 'ADJ'), ('and', 'CONJ'), ('squad', 'NOUN'), ('conditions', 'NOUN'), ('ground', 'NOUN'), ('dope-ridden', 'ADJ'), ('for', 'ADP'), ('flew', 'VERB'), (',', '.'), ('I', 'PRON'), ('?', '.'), ('if', 'ADP'), ('bosom', 'NOUN'), ('Negro', 'NOUN'), ('there', 'PRT'), ('.', '.'), ('the', 'DET'), (',', '.'), ('.', '.'), (',', '.'), ('but', 'CONJ'), ('and', 'CONJ'), ('her', 'PRON'), ('winds', 'NOUN'), (',', '.'), ('of', 'ADP'), ('.', '.'), ('Harpers', 'NOUN'), ('no', 'DET'), ('had', 'VERB'), ('on', 'ADP'), ("They'll", 'PRT'), ('nose', 'NOUN'), ('went', 'VERB'), ('the', 'DET'), ('and', 'CONJ'), (',', '.'), ('the', 'DET'), ('behind', 'ADP'), ('town', 'NOUN'), ('and', 'CONJ'), ('of', 'ADP'), ('have', 'VERB'), ('asleep', 'ADV'), (',', '.'), ('of', 'ADP'), ('when', 'ADV'), ('of', 'ADP'), ('that', 'PRON'), ('and', 'CONJ'), ('deep-set', 'ADJ'), ('him', 'PRON'), ('?', '.'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('to', 'PRT'), ('fishers', 'NOUN'), ('The', 'DET'), ('never', 'ADV'), ('of', 'ADP'), ('found', 'VERB'), ('were', 'VERB'), ('out', 'PRT'), ('the', 'DET'), ('know', 'VERB'), ('we', 'PRON'), ('coat', 'NOUN'), ("''", '.'), ('room', 'NOUN'), ('``', '.'), ('to', 'PRT'), ('seen', 'VERB'), ('she', 'PRON'), ('.', '.'), ('.', '.'), ('for', 'ADP'), ('towels', 'NOUN'), ('no', 'DET'), ('order', 'NOUN'), ('chambermaid', 'NOUN'), ('the', 'DET'), ('find', 'VERB'), ('transfer', 'NOUN'), ('let', 'VERB'), ('slums', 'NOUN'), (',', '.'), ('Take', 'VERB'), ('a', 'DET'), ('the', 'DET'), ('natural', 'ADJ'), ('or', 'CONJ'), (',', '.'), ('brought', 'VERB'), ('recognized', 'VERB'), ('He', 'PRON'), ('found', 'VERB'), ('big', 'ADJ'), ('went', 'VERB'), ('said', 'VERB'), ('wife', 'NOUN'), ('can', 'VERB'), ('desire', 'NOUN'), ('from', 'ADP'), ('those', 'DET'), ('the', 'DET'), ('express', 'NOUN'), ('Byron', 'NOUN'), ('meeting', 'NOUN'), ('himself', 'PRON'), ('else', 'ADV'), ('food', 'NOUN'), ('with', 'ADP'), ('done', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('they', 'PRON'), ('sandy', 'ADJ'), ('crisis', 'NOUN'), ('I', 'PRON'), ('the', 'DET'), ('the', 'DET'), ('doctor', 'NOUN'), ('Treasury', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('Good-by', 'PRT'), ('and', 'CONJ'), ('Duclos', 'NOUN'), ('Sundays', 'NOUN'), ('and', 'CONJ'), ('kissing', 'VERB'), ('to', 'PRT'), ('He', 'PRON'), ('would', 'VERB'), (';', '.'), ('bastards', 'NOUN'), ('become', 'VERB'), ('directory', 'NOUN'), ('moonlight', 'NOUN'), ('beyond', 'ADV'), ('mean', 'VERB'), ('had', 'VERB'), ('had', 'VERB'), ('Adam', 'NOUN'), ('upstairs', 'ADV'), ('a', 'DET'), ('test', 'NOUN'), ('people', 'NOUN'), ('bone', 'NOUN'), ('I', 'PRON'), ('it', 'PRON'), ('said', 'VERB'), ('did', 'VERB'), ('would', 'VERB'), ('from', 'ADP'), (',', '.'), ('a', 'DET'), ('``', '.'), (',', '.'), ('I', 'PRON'), ('and', 'CONJ'), ('have', 'VERB'), ('.', '.'), ('bad', 'ADJ'), ('about', 'ADP'), ('playing', 'VERB'), ('provincial', 'ADJ'), ("''", '.'), ('There', 'PRT'), ('way', 'NOUN'), ('Anthony', 'NOUN'), ('man', 'NOUN'), ('of', 'ADP'), ('rest', 'NOUN'), ('!', '.'), ('days', 'NOUN'), ('all', 'PRT'), (',', '.'), ('She', 'PRON'), ('reason', 'NOUN'), ('God', 'NOUN'), ('.', '.'), ('junction', 'NOUN'), ('general', 'ADJ'), ('difficulty', 'NOUN'), ('would', 'VERB'), ('poured', 'VERB'), ('tipped', 'VERB'), ('They', 'PRON'), (',', '.'), ('for', 'ADP'), ('I', 'PRON'), ('box', 'NOUN'), ('those', 'DET'), ("I've", 'PRT'), ('.', '.'), ('had', 'VERB'), ('glow', 'NOUN'), ('scent', 'NOUN'), ('Army', 'NOUN'), ('on', 'ADP'), ('marched', 'VERB'), ('had', 'VERB'), ('very', 'ADV'), ('or', 'CONJ'), ('?', '.'), ('he', 'PRON'), ('in', 'ADP'), ('deacon', 'NOUN'), ('at', 'ADP'), ('.', '.'), ('seems', 'VERB'), ('.', '.'), ('bright', 'ADJ'), ('a', 'DET'), ('beard', 'NOUN'), ('them', 'PRON'), ('like', 'ADP'), ('the', 'DET'), ('.', '.'), ('your', 'DET'), ('it', 'PRON'), ('drizzle', 'NOUN'), ('fact', 'NOUN'), ('Scout', 'NOUN'), ('of', 'ADP'), ('never', 'ADV'), ('for', 'ADP'), (',', '.'), (',', '.'), ('beer', 'NOUN'), ('``', '.'), ('her', 'DET'), ('a', 'DET'), ('on', 'ADP'), ('besides', 'ADV'), ('futility', 'NOUN'), ('suddenly', 'ADV'), ('of', 'ADP'), ('Methodist', 'ADJ'), ('needled', 'VERB'), ('about', 'ADP'), (',', '.'), ('barley', 'NOUN'), ('heroes', 'NOUN'), ('his', 'DET'), ("''", '.'), ('serve', 'VERB'), ("''", '.'), ('Christ', 'NOUN'), ('with', 'ADP'), ('When', 'ADV'), ('men', 'NOUN'), ('offered', 'VERB'), ('.', '.'), ('be', 'VERB'), ('a', 'DET'), ('Bathyran', 'ADJ'), ('them', 'PRON'), ('hot', 'ADJ'), ('several', 'ADJ'), ('.', '.'), ('These', 'DET'), ('chambre', 'X'), ('of', 'ADP'), ('the', 'DET'), ('cathedrals', 'NOUN'), ('heavily', 'ADV'), ('insides', 'NOUN'), ('over', 'ADP'), ('ran', 'VERB'), ('troubled', 'VERB'), ('but', 'CONJ'), ('single', 'ADJ'), ('in', 'ADP'), ('go', 'VERB'), ('back', 'ADV'), ('or', 'CONJ'), ('hundred', 'NUM'), ('Then', 'ADV'), ('And', 'CONJ'), ('keeping', 'VERB'), ('an', 'DET'), ('not', 'ADV'), ('ones', 'NOUN'), ('eyes', 'NOUN'), ('was', 'VERB'), ('anyway', 'ADV'), ('up', 'ADP'), ('He', 'PRON'), ('hearing', 'VERB'), ('superior', 'ADJ'), ('expression', 'NOUN'), ('think', 'VERB'), (':', '.'), ('of', 'ADP'), ('things', 'NOUN'), ('.', '.'), ('was', 'VERB'), ('had', 'VERB'), ('house', 'NOUN'), ('got', 'VERB'), ('in', 'ADP'), ('eighty-three', 'NUM'), ('Do', 'VERB'), ('miss', 'VERB'), ('the', 'DET'), ('as', 'ADP'), ('he', 'PRON'), ('a', 'DET'), ('and', 'CONJ'), ('neither', 'CONJ'), ('about', 'ADP'), ('spitting', 'VERB'), ('night', 'NOUN'), ('and', 'CONJ'), ('sticks', 'NOUN'), ('street', 'NOUN'), ('and', 'CONJ'), ('It', 'PRON'), ('hostelries', 'NOUN'), ('word', 'NOUN'), ('``', '.'), ('given', 'VERB'), ('A', 'DET'), ('breakfast', 'NOUN'), ('dying', 'VERB'), ('and', 'CONJ'), ('rapidly', 'ADV'), ('over', 'ADP'), ('You', 'PRON'), ('would', 'VERB'), ('the', 'DET'), ('thick', 'ADJ'), (',', '.'), ('signal', 'NOUN'), ('triumphant', 'ADJ'), (',', '.'), ('who', 'PRON'), ('cracked', 'VERB'), ('finger', 'NOUN'), ('anything', 'NOUN'), (':', '.'), ('well-stuffed', 'ADJ'), ('was', 'VERB'), (';', '.'), ('compelled', 'VERB'), ('?', '.'), ('the', 'DET'), ('after', 'ADP'), ('.', '.'), ('whether', 'ADP'), ('--', '.'), ('the', 'DET'), ('.', '.'), ('?', '.'), ('the', 'DET'), ('more', 'ADJ'), ('.', '.'), ('are', 'VERB'), ('try', 'VERB'), ('of', 'ADP'), ('it', 'PRON'), ('without', 'ADP'), ('I', 'PRON'), ('``', '.'), ('perhaps', 'ADV'), ('!', '.'), ('wicked', 'ADJ'), ('of', 'ADP'), ('eyebrow', 'NOUN'), ('throbbing', 'NOUN'), ('had', 'VERB'), ('the', 'DET'), ('successful', 'ADJ'), ('to', 'ADP'), ('.', '.'), ('he', 'PRON'), ('audience', 'NOUN'), ('moist', 'ADJ'), ('until', 'ADP'), ('what', 'DET'), (',', '.'), ('to', 'PRT'), ('and', 'CONJ'), ('kill', 'VERB'), ('sip', 'NOUN'), ('and', 'CONJ'), ('bolt', 'NOUN'), (',', '.'), (',', '.'), ('sure', 'VERB'), ('the', 'DET'), ('.', '.'), ('a', 'DET'), ('of', 'ADP'), ('leather', 'NOUN'), ('to', 'ADP'), ('all', 'PRT'), ('of', 'ADP'), ('soft', 'ADJ'), ('air', 'NOUN'), ('house', 'NOUN'), ('the', 'DET'), ('is', 'VERB'), ('mark', 'NOUN'), ('among', 'ADP'), ('they', 'PRON'), ('.', '.'), ('it', 'PRON'), ('?', '.'), ('a', 'DET'), ('breeches', 'NOUN'), ('when', 'ADV'), ('speak', 'VERB'), ('men', 'NOUN'), ('he', 'PRON'), ('boys', 'NOUN'), ('a', 'DET'), ('he', 'PRON'), ('to', 'ADP'), ('knack', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('He', 'PRON'), ('and', 'CONJ'), ('studio', 'NOUN'), ('undo', 'VERB'), ('.', '.'), ('baby', 'NOUN'), ('So', 'ADV'), ('working', 'VERB'), ('as', 'ADP'), ('The', 'DET'), ('a', 'DET'), ('right', 'ADV'), ('have', 'VERB'), ('long', 'ADJ'), ('until', 'ADP'), ('where', 'ADV'), ('now', 'ADV'), ('awkwardly', 'ADV'), ('months', 'NOUN'), ('When', 'ADV'), ('brandy', 'NOUN'), ('be', 'VERB'), ('city', 'NOUN'), (',', '.'), ('the', 'DET'), ('my', 'DET'), ('had', 'VERB'), ('armpits', 'NOUN'), ('told', 'VERB'), ('stairs', 'NOUN'), ('front', 'ADJ'), ('was', 'VERB'), ('was', 'VERB'), ('looked', 'VERB'), ('arm', 'NOUN'), ('medicines', 'NOUN'), ('teaspoonful', 'NOUN'), ('merging', 'VERB'), ('came', 'VERB'), ('?', '.'), ('Before', 'ADP'), ('the', 'DET'), ('kept', 'VERB'), ('populace', 'NOUN'), ('what', 'DET'), ('toward', 'ADP'), ('.', '.'), ('.', '.'), ('Styka', 'NOUN'), ('all', 'PRT'), ('them', 'PRON'), ('screeching', 'VERB'), (',', '.'), ('his', 'DET'), ('a', 'DET'), ('Otherwise', 'ADV'), ('men', 'NOUN'), ('not', 'ADV'), ('mad', 'ADJ'), ('sense', 'NOUN'), ('?', '.'), ('jackdaws', 'NOUN'), ('.', '.'), ('Here', 'ADV'), ('what', 'DET'), ('solid', 'ADJ'), ('dared', 'VERB'), ('in', 'ADP'), ('was', 'VERB'), ('figure', 'NOUN'), ('impossible', 'ADJ'), ('no', 'DET'), ('from', 'ADP'), ('arm', 'NOUN'), ('Art', 'NOUN'), ('The', 'DET'), ('his', 'DET'), ('work', 'NOUN'), ('safety', 'NOUN'), ('little', 'ADJ'), ('.', '.'), ('.', '.'), ('every', 'DET'), ('English-Dutch', 'ADJ'), ('Good', 'ADJ'), ('know', 'VERB'), ('later', 'ADV'), ('amazed', 'VERB'), ('hearing', 'VERB'), ('tolerated', 'VERB'), ('to', 'PRT'), ('Who', 'PRON'), ('those', 'DET'), ('himself', 'PRON'), ('merveilleux', 'X'), ('upstairs', 'ADV'), ('away', 'ADV'), ('Kayabashi', 'NOUN'), ('could', 'VERB'), ('?', '.'), (',', '.'), ('hopped', 'VERB'), ('in', 'ADP'), ('divine', 'ADJ'), ('proud', 'ADJ'), ('sung', 'VERB'), ('grace', 'NOUN'), ('that', 'ADP'), ('made', 'VERB'), ('since', 'ADP'), ('clear', 'ADJ'), ('asked', 'VERB'), ('Not', 'ADV'), ('the', 'DET'), ('.', '.'), ('dust', 'VERB'), ('not', 'ADV'), ("''", '.'), (',', '.'), ('knew', 'VERB'), ('it', 'PRON'), ('to', 'PRT'), ('House', 'NOUN'), ('wait', 'NOUN'), ('find', 'VERB'), ('before', 'ADP'), ('stitches', 'NOUN'), ('The', 'DET'), ('knee-deep', 'ADV'), ('honey', 'NOUN'), (',', '.'), ('were', 'VERB'), ('on', 'ADP'), ('.', '.'), ('scented', 'VERB'), ('jumped', 'VERB'), ('the', 'DET'), ('recorded', 'VERB'), ('watched', 'VERB'), ('We', 'PRON'), ('.', '.'), ('.', '.'), (';', '.'), ('day', 'NOUN'), ('a', 'DET'), ('have', 'VERB'), ('the', 'DET'), ('to', 'PRT'), ('of', 'ADP'), ('``', '.'), ('rain', 'NOUN'), ('he', 'PRON'), ('.', '.'), ('first', 'ADV'), ('intend', 'VERB'), ('to', 'PRT'), ('colonel', 'NOUN'), ('exposed', 'VERB'), ('Billy', 'NOUN'), ('hard', 'ADJ'), ('time', 'NOUN'), ('an', 'DET'), ('in', 'ADP'), ('First', 'ADJ'), ('everyone', 'NOUN'), ('life', 'NOUN'), ('earth', 'NOUN'), ('whatever', 'DET'), ('individual', 'NOUN'), ('.', '.'), ('a', 'DET'), ('Debts', 'NOUN'), ('of', 'ADP'), ('Eileen', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('was', 'VERB'), ('brother', 'NOUN'), ('the', 'DET'), ('.', '.'), ('boss', 'NOUN'), ('Alastor', 'NOUN'), ('Jacques', 'NOUN'), ('when', 'ADV'), ('air', 'NOUN'), ('meadows', 'NOUN'), ('the', 'DET'), ('.', '.'), ('Mrs.', 'NOUN'), ('who', 'PRON'), ('altruism', 'NOUN'), ('it', 'PRON'), ('into', 'ADP'), ('.', '.'), ('banker', 'NOUN'), ('the', 'DET'), (',', '.'), ("''", '.'), ('?', '.'), ('is', 'VERB'), (',', '.'), ('out', 'PRT'), ('was', 'VERB'), ('the', 'DET'), ('She', 'PRON'), ('like', 'ADP'), ('labeled', 'VERB')]
: Training set: 900 | [('house', 'NOUN'), ('bet', 'VERB'), ('the', 'DET'), ('hotels', 'NOUN'), ('and', 'CONJ'), ('broke', 'VERB'), ('about', 'ADV'), ('a', 'DET'), ('phrase', 'NOUN'), ('no', 'DET'), ('just', 'ADV'), ('of', 'ADP'), ('in', 'ADP'), ('the', 'DET'), ('to', 'PRT'), ('questions', 'NOUN'), ('The', 'DET'), ('No', 'ADV'), ('it', 'PRON'), ('.', '.'), ('``', '.'), ('of', 'ADP'), ('door', 'NOUN'), ('toward', 'ADP'), ('the', 'DET'), ('ice-chest', 'NOUN'), ('worry', 'VERB'), (',', '.'), ('.', '.'), ('happen', 'VERB'), ('.', '.'), ('childhood', 'NOUN'), ('to', 'PRT'), ('so', 'ADV'), ('If', 'ADP'), ('New', 'ADJ'), ('more', 'ADV'), ('south', 'NOUN'), ('gouged', 'VERB'), ("ain't", 'VERB'), ('panic', 'NOUN'), (';', '.'), ('of', 'ADP'), ('.', '.'), ('in', 'ADP'), ('look', 'NOUN'), ('this', 'DET'), ('better', 'ADV'), ('nothing', 'NOUN'), ('I', 'PRON'), ('center', 'NOUN'), ('with', 'ADP'), ('.', '.'), ('waiting', 'VERB'), ('.', '.'), ('bed', 'NOUN'), ('young', 'ADJ'), (':', '.'), ('all', 'PRT'), ('That', 'DET'), ('and', 'CONJ'), ('fatigue', 'NOUN'), ('will', 'VERB'), ('taken', 'VERB'), ('a', 'DET'), ('unbroken', 'ADJ'), ('drawings', 'NOUN'), ('I', 'PRON'), ('was', 'VERB'), ('a', 'DET'), ('.', '.'), ('was', 'VERB'), ('at', 'ADP'), (',', '.'), ('Anthony', 'NOUN'), ('``', '.'), ('had', 'VERB'), ('that', 'ADP'), ('under', 'ADP'), ('he', 'PRON'), ('While', 'ADP'), ('certainly', 'ADV'), ('house', 'NOUN'), ('ran', 'VERB'), ('too', 'ADV'), ('when', 'ADV'), ('``', '.'), ('Catholics', 'NOUN'), ('him', 'PRON'), ('preaching', 'VERB'), ('for', 'ADP'), ('mining', 'VERB'), ('ring', 'NOUN'), ('over', 'ADP'), ('the', 'DET'), ('kind', 'NOUN'), ('.', '.'), ('``', '.'), ('He', 'PRON'), ('ground', 'NOUN'), ('to', 'PRT'), ('this', 'DET'), ('.', '.'), ('The', 'DET'), ("''", '.'), ('cover', 'NOUN'), ('patronne', 'X'), ('flick', 'NOUN'), ('that', 'DET'), ('Connections', 'NOUN'), ('were', 'VERB'), ('needles', 'NOUN'), ('the', 'DET'), ('say', 'VERB'), ('.', '.'), ('ready', 'ADJ'), ('myself', 'PRON'), ('but', 'CONJ'), ('it', 'PRON'), ('I', 'PRON'), ('.', '.'), ('just', 'ADV'), ('about', 'ADP'), ('sketching', 'VERB'), ('and', 'CONJ'), ('yellowing', 'VERB'), ('she', 'PRON'), ('Five', 'NUM'), ('the', 'DET'), ('the', 'DET'), ("o'clock", 'ADV'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('ducks', 'NOUN'), ('into', 'ADP'), ('necessary', 'ADJ'), ('whereas', 'ADP'), ('time', 'NOUN'), ('presence', 'NOUN'), ('desires', 'NOUN'), (',', '.'), ('years', 'NOUN'), ('reply', 'NOUN'), ('autumn', 'NOUN'), ('down', 'PRT'), ('read', 'VERB'), ('what', 'DET'), ('.', '.'), ('dumped', 'VERB'), ('things', 'NOUN'), ('cleaned', 'VERB'), ('expected', 'VERB'), ('him', 'PRON'), ('before', 'ADP'), ('my', 'DET'), ('.', '.'), ('in', 'ADP'), ('sold', 'VERB'), ('Argiento', 'NOUN'), ('rent', 'NOUN'), ('.', '.'), ('on', 'ADP'), ('head', 'NOUN'), ('meaning', 'NOUN'), ('conduct', 'NOUN'), ('was', 'VERB'), ('had', 'VERB'), ('.', '.'), ('while', 'ADP'), ('.', '.'), ('is', 'VERB'), ('seeming', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('a', 'DET'), ('girl', 'NOUN'), ("Jack's", 'NOUN'), ('Miss', 'NOUN'), ('He', 'PRON'), ('Warsaw', 'NOUN'), ('are', 'VERB'), ('lights', 'NOUN'), ('to', 'PRT'), ("one's", 'NOUN'), ('abed', 'ADV'), ("''", '.'), ('her', 'DET'), ('.', '.'), ('seemed', 'VERB'), ('start', 'VERB'), ('among', 'ADP'), ('skin', 'NOUN'), ('could', 'VERB'), ('be', 'VERB'), ('thick', 'ADJ'), ('plates', 'NOUN'), ('fine-looking', 'ADJ'), (',', '.'), ('in', 'ADP'), ('early', 'ADV'), ('a', 'DET'), ('.', '.'), ('been', 'VERB'), ('would', 'VERB'), ("''", '.'), (',', '.'), ('.', '.'), ('do', 'VERB'), ('Here', 'ADV'), ('and', 'CONJ'), ('hurry', 'NOUN'), ('thought', 'VERB'), ('a', 'DET'), ('she', 'PRON'), ('wedding', 'NOUN'), ('make', 'VERB'), ('neglected', 'VERB'), ('whiskey', 'NOUN'), ('one', 'NUM'), ('a', 'DET'), ('She', 'PRON'), ('what', 'DET'), ('he', 'PRON'), ('however', 'ADV'), (',', '.'), ('it', 'PRON'), ('far', 'ADV'), ('smile', 'NOUN'), ('a', 'DET'), ('the', 'DET'), ('calumny', 'NOUN'), ('the', 'DET'), ('.', '.'), ('marble', 'NOUN'), ('Bowman', 'NOUN'), ('into', 'ADP'), ('clothes', 'NOUN'), ('the', 'DET'), (',', '.'), ('chose', 'VERB'), ('floor', 'NOUN'), ('how', 'ADV'), ('hand', 'NOUN'), ('He', 'PRON'), ('make', 'VERB'), ('While', 'ADP'), ('you', 'PRON'), ('of', 'ADP'), ('and', 'CONJ'), ('``', '.'), ('of', 'ADP'), ('Oh', 'PRT'), ('married', 'VERB'), ('Council', 'NOUN'), ('borrowed', 'VERB'), ('as', 'ADP'), ('like', 'ADP'), ('What', 'DET'), ('what', 'DET'), (',', '.'), ('become', 'VERB'), ('seem', 'VERB'), ('.', '.'), ('identity', 'NOUN'), (',', '.'), ('in', 'ADP'), ('went', 'VERB'), (',', '.'), ('Your', 'DET'), ('and', 'CONJ'), ("''", '.'), ('complete', 'ADJ'), ('if', 'ADP'), (',', '.'), ('three', 'NUM'), ('she', 'PRON'), ('Rector', 'NOUN'), ('knowing', 'VERB'), ('to', 'PRT'), ('cabins', 'NOUN'), ('maybe', 'ADV'), ('milk', 'NOUN'), ('no', 'DET'), ('bedroom', 'NOUN'), ('the', 'DET'), ('postmark', 'NOUN'), ('waded', 'VERB'), ('one', 'NUM'), ('.', '.'), ('here', 'ADV'), ('pitcher', 'NOUN'), ('his', 'DET'), ('grunt', 'VERB'), ('.', '.'), ('shook', 'VERB'), ('Seventh', 'ADJ'), ('even', 'ADV'), ('grounds', 'NOUN'), ("''", '.'), ('beset', 'VERB'), ('in', 'ADP'), (',', '.'), ('smoked', 'VERB'), ('it', 'PRON'), (',', '.'), ('afterward', 'ADV'), ('progress', 'NOUN'), ('being', 'VERB'), ('and', 'CONJ'), ('a', 'DET'), ('saw', 'VERB'), ("''", '.'), ('and', 'CONJ'), ('nuns', 'NOUN'), ('church', 'NOUN'), ('above', 'ADV'), ('took', 'VERB'), ('the', 'DET'), ('.', '.'), ('.', '.'), ('climbed', 'VERB'), ('not', 'ADV'), ('in', 'ADP'), ('her', 'PRON'), ('a', 'DET'), ('the', 'DET'), ('top', 'NOUN'), ('Thelma', 'NOUN'), ('worked', 'VERB'), ('placed', 'VERB'), ('to', 'ADP'), ('and', 'CONJ'), ('Lying', 'VERB'), ('his', 'DET'), ('fork', 'NOUN'), ('willya', 'VERB'), ('amount', 'NOUN'), ('himself', 'PRON'), (',', '.'), ('Papa', 'NOUN'), ('of', 'ADP'), ("one's", 'NOUN'), ('sick', 'ADJ'), ('into', 'ADP'), ('remained', 'VERB'), (',', '.'), ('Kate', 'NOUN'), ('deserving', 'ADJ'), ('beans', 'NOUN'), ('his', 'DET'), ('hand', 'NOUN'), ('the', 'DET'), ('a', 'DET'), ('He', 'PRON'), ('slapped', 'VERB'), ('whisky', 'NOUN'), ('the', 'DET'), (',', '.'), ('was', 'VERB'), ('poncho', 'NOUN'), ('said', 'VERB'), ('well', 'ADV'), ('wrist', 'NOUN'), ('that', 'ADP'), ('reach', 'VERB'), ('final', 'ADJ'), ('and', 'CONJ'), ('squad', 'NOUN'), ('conditions', 'NOUN'), ('ground', 'NOUN'), ('dope-ridden', 'ADJ'), ('for', 'ADP'), ('flew', 'VERB'), (',', '.'), ('I', 'PRON'), ('?', '.'), ('if', 'ADP'), ('bosom', 'NOUN'), ('Negro', 'NOUN'), ('there', 'PRT'), ('.', '.'), ('the', 'DET'), (',', '.'), ('.', '.'), (',', '.'), ('but', 'CONJ'), ('and', 'CONJ'), ('her', 'PRON'), ('winds', 'NOUN'), (',', '.'), ('of', 'ADP'), ('.', '.'), ('Harpers', 'NOUN'), ('no', 'DET'), ('had', 'VERB'), ('on', 'ADP'), ("They'll", 'PRT'), ('nose', 'NOUN'), ('went', 'VERB'), ('the', 'DET'), ('and', 'CONJ'), (',', '.'), ('the', 'DET'), ('behind', 'ADP'), ('town', 'NOUN'), ('and', 'CONJ'), ('of', 'ADP'), ('have', 'VERB'), ('asleep', 'ADV'), (',', '.'), ('of', 'ADP'), ('when', 'ADV'), ('of', 'ADP'), ('that', 'PRON'), ('and', 'CONJ'), ('deep-set', 'ADJ'), ('him', 'PRON'), ('?', '.'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('to', 'PRT'), ('fishers', 'NOUN'), ('The', 'DET'), ('never', 'ADV'), ('of', 'ADP'), ('found', 'VERB'), ('were', 'VERB'), ('out', 'PRT'), ('the', 'DET'), ('know', 'VERB'), ('we', 'PRON'), ('coat', 'NOUN'), ("''", '.'), ('room', 'NOUN'), ('``', '.'), ('to', 'PRT'), ('seen', 'VERB'), ('she', 'PRON'), ('.', '.'), ('.', '.'), ('for', 'ADP'), ('towels', 'NOUN'), ('no', 'DET'), ('order', 'NOUN'), ('chambermaid', 'NOUN'), ('the', 'DET'), ('find', 'VERB'), ('transfer', 'NOUN'), ('let', 'VERB'), ('slums', 'NOUN'), (',', '.'), ('Take', 'VERB'), ('a', 'DET'), ('the', 'DET'), ('natural', 'ADJ'), ('or', 'CONJ'), (',', '.'), ('brought', 'VERB'), ('recognized', 'VERB'), ('He', 'PRON'), ('found', 'VERB'), ('big', 'ADJ'), ('went', 'VERB'), ('said', 'VERB'), ('wife', 'NOUN'), ('can', 'VERB'), ('desire', 'NOUN'), ('from', 'ADP'), ('those', 'DET'), ('the', 'DET'), ('express', 'NOUN'), ('Byron', 'NOUN'), ('meeting', 'NOUN'), ('himself', 'PRON'), ('else', 'ADV'), ('food', 'NOUN'), ('with', 'ADP'), ('done', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('they', 'PRON'), ('sandy', 'ADJ'), ('crisis', 'NOUN'), ('I', 'PRON'), ('the', 'DET'), ('the', 'DET'), ('doctor', 'NOUN'), ('Treasury', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('Good-by', 'PRT'), ('and', 'CONJ'), ('Duclos', 'NOUN'), ('Sundays', 'NOUN'), ('and', 'CONJ'), ('kissing', 'VERB'), ('to', 'PRT'), ('He', 'PRON'), ('would', 'VERB'), (';', '.'), ('bastards', 'NOUN'), ('become', 'VERB'), ('directory', 'NOUN'), ('moonlight', 'NOUN'), ('beyond', 'ADV'), ('mean', 'VERB'), ('had', 'VERB'), ('had', 'VERB'), ('Adam', 'NOUN'), ('upstairs', 'ADV'), ('a', 'DET'), ('test', 'NOUN'), ('people', 'NOUN'), ('bone', 'NOUN'), ('I', 'PRON'), ('it', 'PRON'), ('said', 'VERB'), ('did', 'VERB'), ('would', 'VERB'), ('from', 'ADP'), (',', '.'), ('a', 'DET'), ('``', '.'), (',', '.'), ('I', 'PRON'), ('and', 'CONJ'), ('have', 'VERB'), ('.', '.'), ('bad', 'ADJ'), ('about', 'ADP'), ('playing', 'VERB'), ('provincial', 'ADJ'), ("''", '.'), ('There', 'PRT'), ('way', 'NOUN'), ('Anthony', 'NOUN'), ('man', 'NOUN'), ('of', 'ADP'), ('rest', 'NOUN'), ('!', '.'), ('days', 'NOUN'), ('all', 'PRT'), (',', '.'), ('She', 'PRON'), ('reason', 'NOUN'), ('God', 'NOUN'), ('.', '.'), ('junction', 'NOUN'), ('general', 'ADJ'), ('difficulty', 'NOUN'), ('would', 'VERB'), ('poured', 'VERB'), ('tipped', 'VERB'), ('They', 'PRON'), (',', '.'), ('for', 'ADP'), ('I', 'PRON'), ('box', 'NOUN'), ('those', 'DET'), ("I've", 'PRT'), ('.', '.'), ('had', 'VERB'), ('glow', 'NOUN'), ('scent', 'NOUN'), ('Army', 'NOUN'), ('on', 'ADP'), ('marched', 'VERB'), ('had', 'VERB'), ('very', 'ADV'), ('or', 'CONJ'), ('?', '.'), ('he', 'PRON'), ('in', 'ADP'), ('deacon', 'NOUN'), ('at', 'ADP'), ('.', '.'), ('seems', 'VERB'), ('.', '.'), ('bright', 'ADJ'), ('a', 'DET'), ('beard', 'NOUN'), ('them', 'PRON'), ('like', 'ADP'), ('the', 'DET'), ('.', '.'), ('your', 'DET'), ('it', 'PRON'), ('drizzle', 'NOUN'), ('fact', 'NOUN'), ('Scout', 'NOUN'), ('of', 'ADP'), ('never', 'ADV'), ('for', 'ADP'), (',', '.'), (',', '.'), ('beer', 'NOUN'), ('``', '.'), ('her', 'DET'), ('a', 'DET'), ('on', 'ADP'), ('besides', 'ADV'), ('futility', 'NOUN'), ('suddenly', 'ADV'), ('of', 'ADP'), ('Methodist', 'ADJ'), ('needled', 'VERB'), ('about', 'ADP'), (',', '.'), ('barley', 'NOUN'), ('heroes', 'NOUN'), ('his', 'DET'), ("''", '.'), ('serve', 'VERB'), ("''", '.'), ('Christ', 'NOUN'), ('with', 'ADP'), ('When', 'ADV'), ('men', 'NOUN'), ('offered', 'VERB'), ('.', '.'), ('be', 'VERB'), ('a', 'DET'), ('Bathyran', 'ADJ'), ('them', 'PRON'), ('hot', 'ADJ'), ('several', 'ADJ'), ('.', '.'), ('These', 'DET'), ('chambre', 'X'), ('of', 'ADP'), ('the', 'DET'), ('cathedrals', 'NOUN'), ('heavily', 'ADV'), ('insides', 'NOUN'), ('over', 'ADP'), ('ran', 'VERB'), ('troubled', 'VERB'), ('but', 'CONJ'), ('single', 'ADJ'), ('in', 'ADP'), ('go', 'VERB'), ('back', 'ADV'), ('or', 'CONJ'), ('hundred', 'NUM'), ('Then', 'ADV'), ('And', 'CONJ'), ('keeping', 'VERB'), ('an', 'DET'), ('not', 'ADV'), ('ones', 'NOUN'), ('eyes', 'NOUN'), ('was', 'VERB'), ('anyway', 'ADV'), ('up', 'ADP'), ('He', 'PRON'), ('hearing', 'VERB'), ('superior', 'ADJ'), ('expression', 'NOUN'), ('think', 'VERB'), (':', '.'), ('of', 'ADP'), ('things', 'NOUN'), ('.', '.'), ('was', 'VERB'), ('had', 'VERB'), ('house', 'NOUN'), ('got', 'VERB'), ('in', 'ADP'), ('eighty-three', 'NUM'), ('Do', 'VERB'), ('miss', 'VERB'), ('the', 'DET'), ('as', 'ADP'), ('he', 'PRON'), ('a', 'DET'), ('and', 'CONJ'), ('neither', 'CONJ'), ('about', 'ADP'), ('spitting', 'VERB'), ('night', 'NOUN'), ('and', 'CONJ'), ('sticks', 'NOUN'), ('street', 'NOUN'), ('and', 'CONJ'), ('It', 'PRON'), ('hostelries', 'NOUN'), ('word', 'NOUN'), ('``', '.'), ('given', 'VERB'), ('A', 'DET'), ('breakfast', 'NOUN'), ('dying', 'VERB'), ('and', 'CONJ'), ('rapidly', 'ADV'), ('over', 'ADP'), ('You', 'PRON'), ('would', 'VERB'), ('the', 'DET'), ('thick', 'ADJ'), (',', '.'), ('signal', 'NOUN'), ('triumphant', 'ADJ'), (',', '.'), ('who', 'PRON'), ('cracked', 'VERB'), ('finger', 'NOUN'), ('anything', 'NOUN'), (':', '.'), ('well-stuffed', 'ADJ'), ('was', 'VERB'), (';', '.'), ('compelled', 'VERB'), ('?', '.'), ('the', 'DET'), ('after', 'ADP'), ('.', '.'), ('whether', 'ADP'), ('--', '.'), ('the', 'DET'), ('.', '.'), ('?', '.'), ('the', 'DET'), ('more', 'ADJ'), ('.', '.'), ('are', 'VERB'), ('try', 'VERB'), ('of', 'ADP'), ('it', 'PRON'), ('without', 'ADP'), ('I', 'PRON'), ('``', '.'), ('perhaps', 'ADV'), ('!', '.'), ('wicked', 'ADJ'), ('of', 'ADP'), ('eyebrow', 'NOUN'), ('throbbing', 'NOUN'), ('had', 'VERB'), ('the', 'DET'), ('successful', 'ADJ'), ('to', 'ADP'), ('.', '.'), ('he', 'PRON'), ('audience', 'NOUN'), ('moist', 'ADJ'), ('until', 'ADP'), ('what', 'DET'), (',', '.'), ('to', 'PRT'), ('and', 'CONJ'), ('kill', 'VERB'), ('sip', 'NOUN'), ('and', 'CONJ'), ('bolt', 'NOUN'), (',', '.'), (',', '.'), ('sure', 'VERB'), ('the', 'DET'), ('.', '.'), ('a', 'DET'), ('of', 'ADP'), ('leather', 'NOUN'), ('to', 'ADP'), ('all', 'PRT'), ('of', 'ADP'), ('soft', 'ADJ'), ('air', 'NOUN'), ('house', 'NOUN'), ('the', 'DET'), ('is', 'VERB'), ('mark', 'NOUN'), ('among', 'ADP'), ('they', 'PRON'), ('.', '.'), ('it', 'PRON'), ('?', '.'), ('a', 'DET'), ('breeches', 'NOUN'), ('when', 'ADV'), ('speak', 'VERB'), ('men', 'NOUN'), ('he', 'PRON'), ('boys', 'NOUN'), ('a', 'DET'), ('he', 'PRON'), ('to', 'ADP'), ('knack', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('He', 'PRON'), ('and', 'CONJ'), ('studio', 'NOUN'), ('undo', 'VERB'), ('.', '.'), ('baby', 'NOUN'), ('So', 'ADV'), ('working', 'VERB'), ('as', 'ADP'), ('The', 'DET'), ('a', 'DET'), ('right', 'ADV'), ('have', 'VERB'), ('long', 'ADJ'), ('until', 'ADP'), ('where', 'ADV'), ('now', 'ADV'), ('awkwardly', 'ADV'), ('months', 'NOUN'), ('When', 'ADV'), ('brandy', 'NOUN'), ('be', 'VERB'), ('city', 'NOUN'), (',', '.'), ('the', 'DET'), ('my', 'DET'), ('had', 'VERB'), ('armpits', 'NOUN'), ('told', 'VERB'), ('stairs', 'NOUN'), ('front', 'ADJ'), ('was', 'VERB'), ('was', 'VERB'), ('looked', 'VERB'), ('arm', 'NOUN'), ('medicines', 'NOUN'), ('teaspoonful', 'NOUN'), ('merging', 'VERB'), ('came', 'VERB'), ('?', '.'), ('Before', 'ADP'), ('the', 'DET'), ('kept', 'VERB'), ('populace', 'NOUN'), ('what', 'DET'), ('toward', 'ADP'), ('.', '.'), ('.', '.'), ('Styka', 'NOUN'), ('all', 'PRT'), ('them', 'PRON'), ('screeching', 'VERB'), (',', '.'), ('his', 'DET'), ('a', 'DET'), ('Otherwise', 'ADV'), ('men', 'NOUN'), ('not', 'ADV'), ('mad', 'ADJ'), ('sense', 'NOUN'), ('?', '.'), ('jackdaws', 'NOUN'), ('.', '.'), ('Here', 'ADV'), ('what', 'DET'), ('solid', 'ADJ'), ('dared', 'VERB'), ('in', 'ADP'), ('was', 'VERB'), ('figure', 'NOUN'), ('impossible', 'ADJ'), ('no', 'DET'), ('from', 'ADP'), ('arm', 'NOUN'), ('Art', 'NOUN'), ('The', 'DET'), ('his', 'DET'), ('work', 'NOUN'), ('safety', 'NOUN'), ('little', 'ADJ'), ('.', '.'), ('.', '.'), ('every', 'DET'), ('English-Dutch', 'ADJ'), ('Good', 'ADJ'), ('know', 'VERB'), ('later', 'ADV'), ('amazed', 'VERB'), ('hearing', 'VERB'), ('tolerated', 'VERB'), ('to', 'PRT'), ('Who', 'PRON'), ('those', 'DET'), ('himself', 'PRON'), ('merveilleux', 'X'), ('upstairs', 'ADV'), ('away', 'ADV'), ('Kayabashi', 'NOUN'), ('could', 'VERB'), ('?', '.'), (',', '.'), ('hopped', 'VERB'), ('in', 'ADP'), ('divine', 'ADJ'), ('proud', 'ADJ'), ('sung', 'VERB'), ('grace', 'NOUN')]
: Testing set: 100 | [('that', 'ADP'), ('made', 'VERB'), ('since', 'ADP'), ('clear', 'ADJ'), ('asked', 'VERB'), ('Not', 'ADV'), ('the', 'DET'), ('.', '.'), ('dust', 'VERB'), ('not', 'ADV'), ("''", '.'), (',', '.'), ('knew', 'VERB'), ('it', 'PRON'), ('to', 'PRT'), ('House', 'NOUN'), ('wait', 'NOUN'), ('find', 'VERB'), ('before', 'ADP'), ('stitches', 'NOUN'), ('The', 'DET'), ('knee-deep', 'ADV'), ('honey', 'NOUN'), (',', '.'), ('were', 'VERB'), ('on', 'ADP'), ('.', '.'), ('scented', 'VERB'), ('jumped', 'VERB'), ('the', 'DET'), ('recorded', 'VERB'), ('watched', 'VERB'), ('We', 'PRON'), ('.', '.'), ('.', '.'), (';', '.'), ('day', 'NOUN'), ('a', 'DET'), ('have', 'VERB'), ('the', 'DET'), ('to', 'PRT'), ('of', 'ADP'), ('``', '.'), ('rain', 'NOUN'), ('he', 'PRON'), ('.', '.'), ('first', 'ADV'), ('intend', 'VERB'), ('to', 'PRT'), ('colonel', 'NOUN'), ('exposed', 'VERB'), ('Billy', 'NOUN'), ('hard', 'ADJ'), ('time', 'NOUN'), ('an', 'DET'), ('in', 'ADP'), ('First', 'ADJ'), ('everyone', 'NOUN'), ('life', 'NOUN'), ('earth', 'NOUN'), ('whatever', 'DET'), ('individual', 'NOUN'), ('.', '.'), ('a', 'DET'), ('Debts', 'NOUN'), ('of', 'ADP'), ('Eileen', 'NOUN'), ('at', 'ADP'), ('the', 'DET'), ('was', 'VERB'), ('brother', 'NOUN'), ('the', 'DET'), ('.', '.'), ('boss', 'NOUN'), ('Alastor', 'NOUN'), ('Jacques', 'NOUN'), ('when', 'ADV'), ('air', 'NOUN'), ('meadows', 'NOUN'), ('the', 'DET'), ('.', '.'), ('Mrs.', 'NOUN'), ('who', 'PRON'), ('altruism', 'NOUN'), ('it', 'PRON'), ('into', 'ADP'), ('.', '.'), ('banker', 'NOUN'), ('the', 'DET'), (',', '.'), ("''", '.'), ('?', '.'), ('is', 'VERB'), (',', '.'), ('out', 'PRT'), ('was', 'VERB'), ('the', 'DET'), ('She', 'PRON'), ('like', 'ADP'), ('labeled', 'VERB')]

We saved the training and testing sets by using the same random seed to
choose a words and shuffle each time so it will always pick the same words
and shuffle.

2.  [@2] <<fea-set>> For each of tuples in your training set in problem
   [[tagging]], extract the last *three letters for the word* and its entire tag,
   and compile these into an NLTK feature set.  Check to see if the same
   feature is mapped to more than one tag and if so, then retag that
   feature with 'X'.  Again, save the feature set for reuse as a file, at
   minimum as a dictionary.  *Do the same for the test set.*
#+begin_src python :results output
import nltk
import random
from nltk.corpus import brown
import os
import json

words = brown.tagged_words(categories='fiction', tagset='universal')
# Random seed so we always get the same output from the random sample
random.seed(a=7740)
data_set = random.sample(list(words), 1000)
train_data = data_set[:900]
test_data = data_set[900:]

def extract_features(data):
    features = {}
    for word, tag in data:
        # Extract the last three letters of the word
        word_ending = word[-3:]
        if word_ending in features:
            # If the word ending already exists but with a different tag, set tag to 'X'
            if features[word_ending] != tag:
                features[word_ending] = 'X'
        else:
            features[word_ending] = tag
    return features

# Extract features for the training and test sets
train_features = extract_features(train_data)
test_features = extract_features(test_data)

# Save the feature sets to a file
with open('train_features.txt', 'w') as file:
    file.write(json.dumps(train_features))

with open('test_features.txt', 'w') as file:
    file.write(json.dumps(test_features))

#+end_src

#+results:

The feature sets for training and testing are saved to 'train_features.txt'
and 'test_features.txt', respectively.

3.  [@3] <<bayesian>> Now train a naive Bayes classifier using the one in
   NLTK or scikit-learn on your saved [[fea-set][feature set]] and show its accuracy.
   Show the ten most informative features (for sure you can get this from
   the NLTK naive Bayes classifier).
#+begin_src python :results output
import nltk
from nltk.classify import NaiveBayesClassifier
from nltk.metrics import accuracy
import random
from nltk.corpus import brown
import json
with open('test_features.txt', 'r') as f:
  test_features = f.read()

with open('train_features.txt', 'r') as f:
  train_features = f.read()

train_data = json.loads(train_features)
print(train_data)
test_data = json.loads(test_features)
words = brown.tagged_words(categories='fiction', tagset='universal')
# Random seed so we always get the same output from the random sample
print(train_data)
def prepare_data_for_classifier(data):
    return [({'word_ending': word}, tag) for word, tag in data.items()]

# Prepare the data
train_set = prepare_data_for_classifier(train_data)
test_set = prepare_data_for_classifier(test_data)
print(test_set)
# Train the Naive Bayes Classifier
classifier = NaiveBayesClassifier.train(train_set)

# Evaluate the classifier
accuracy = nltk.classify.accuracy(classifier, test_set)
print(f"Accuracy: {accuracy * 100:.2f}%")

# Display the 10 most informative features
classifier.show_most_informative_features(10)
#+end_src

#+results:
: {'led': 'VERB', 'her': 'X', 'of': 'ADP', 'to': 'X', 'esh': 'NOUN', 'irs': 'NOUN', 'est': 'ADJ', 'do': 'VERB', 'the': 'DET', 'nly': 'X', 'it': 'PRON', 'ing': 'X', 'I': 'PRON', 'tes': 'NOUN', ';': '.', 'get': 'VERB', 'oth': 'X', 'hat': 'X', '!': '.', ',': '.', 'ble': 'ADJ', 'his': 'DET', 'ung': 'VERB', 'And': 'CONJ', 'een': 'X', 'son': 'NOUN', "n't": 'VERB', 'ain': 'NOUN', 'elf': 'PRON', 'red': 'X', 'a': 'DET', 'hem': 'PRON', 'ese': 'DET', 'He': 'PRON', '.': '.', 'our': 'X', 'gly': 'ADV', 'he': 'PRON', '?': '.', 'ess': 'X', 'ell': 'X', 'ial': 'NOUN', 'now': 'X', 'ied': 'VERB', 'oke': 'VERB', 'ire': 'NOUN', 'ong': 'X', 'icy': 'ADJ', 'for': 'ADP', 'but': 'CONJ', 'new': 'X', 'lin': 'NOUN', 'den': 'ADJ', 'ete': 'ADJ', 'ris': 'NOUN', 'ped': 'VERB', 'uch': 'ADJ', 'ere': 'X', 'him': 'PRON', 'nty': 'X', 'off': 'PRT', 'hen': 'ADV', 'up': 'PRT', 'ove': 'ADP', 'hey': 'PRON', 'and': 'X', 'not': 'ADV', 'ver': 'X', 'ded': 'X', 'if': 'ADP', 'ter': 'X', 'ges': 'NOUN', 'sly': 'X', 'rse': 'NOUN', 'is': 'VERB', 'aid': 'VERB', 'ink': 'ADJ', 'fer': 'VERB', 'int': 'NOUN', 'had': 'VERB', 'she': 'PRON', 'nto': 'ADP', 'ide': 'X', 'cer': 'NOUN', 'are': 'VERB', 'ime': 'NOUN', 'ves': 'NOUN', 'ust': 'X', 'ody': 'NOUN', 'on': 'X', 'in': 'ADP', 'man': 'X', 'ose': 'X', 'der': 'NOUN', 'way': 'X', 'men': 'NOUN', 'ave': 'VERB', 'Sex': 'NOUN', 'ore': 'X', 'hly': 'ADV', '``': '.', 'bor': 'NOUN', 'ark': 'ADJ', 'use': 'NOUN', 'oel': 'NOUN', 'rns': 'NOUN', 'hes': 'NOUN', 'ate': 'X', 'ith': 'ADP', 'uld': 'VERB', 'ars': 'NOUN', 'eer': 'ADJ', 'eal': 'ADJ', 'you': 'PRON', 'was': 'VERB', 'box': 'NOUN', 'elp': 'VERB', 'rch': 'NOUN', 'ect': 'NOUN', 'ery': 'X', 'as': 'ADP', 'ork': 'X', 'oat': 'NOUN', 'ton': 'NOUN', 'ear': 'X', 'any': 'DET', 'one': 'X', 'tty': 'ADV', 'ity': 'NOUN', 'ner': 'NOUN', 'eel': 'X', 'dom': 'NOUN', 'ome': 'X', 'me': 'PRON', 'ght': 'X', "t's": 'PRT', "I'm": 'PRT', 'All': 'PRT', 'pid': 'ADJ', 'ill': 'X', 'my': 'DET', 'ont': 'ADJ', 'lly': 'ADV', 'by': 'ADP', 'out': 'X', 'nds': 'NOUN', "''": '.', 'ven': 'VERB', '500': 'NOUN', 'try': 'NOUN', 'oys': 'NOUN', 'ilk': 'NOUN', 'ked': 'VERB', 'rms': 'NOUN', 'fty': 'NUM', 'guy': 'NOUN', 'ful': 'X', 'act': 'NOUN', 'But': 'CONJ', 'ole': 'ADJ', 'ile': 'X', 'can': 'ADJ', 'ons': 'NOUN', 'nse': 'NOUN', 'God': 'NOUN', 'all': 'PRT', 'ern': 'NOUN', 'ses': 'VERB', 'So': 'ADV', 'ive': 'VERB', 'ved': 'VERB', 'unk': 'ADJ', 'ary': 'ADJ', 'ale': 'NOUN', 'urd': 'ADJ', 'lds': 'NOUN', 'The': 'DET', 'ook': 'X', 'set': 'NOUN', 'ack': 'X', 'nce': 'NOUN', 'pen': 'X', 'ady': 'X', 'igh': 'ADJ', '--': '.', 'own': 'PRT', 'rks': 'VERB', 'two': 'NUM', 'ays': 'X', 'nia': 'NOUN', 'ake': 'VERB', 'ted': 'X', 'thy': 'ADJ', 'ort': 'NOUN', 'ard': 'X', 'fas': 'NOUN', 'be': 'VERB', 'end': 'NOUN', 'old': 'X', 'Let': 'VERB', 'ier': 'NOUN', 'no': 'DET', 'did': 'VERB', 'ick': 'X', 'xed': 'VERB', 'fix': 'VERB', 'tle': 'X', 'ich': 'DET', '.S.': 'NOUN', 'ler': 'NOUN', 'or': 'CONJ', 'who': 'PRON', 'She': 'PRON', 'ine': 'NOUN', 'saw': 'VERB', 'ace': 'NOUN', 'Say': 'VERB', 'oft': 'ADJ', 'sed': 'VERB', 'age': 'NOUN', 'Now': 'ADV', 'let': 'NOUN', 'ots': 'NOUN', 'ite': 'ADJ', 'rth': 'ADV', 'ead': 'NOUN', 'kin': 'VERB', 'at': 'ADP', 'ten': 'NUM', 'ump': 'ADJ', 'row': 'ADJ', 'dew': 'NOUN', 'ice': 'VERB', 'Yet': 'CONJ', 'low': 'X', 'ned': 'VERB', 'ans': 'NOUN', 'ged': 'VERB', 'ood': 'X', 'eir': 'DET', 'ulk': 'NOUN', 'ife': 'NOUN', 'lap': 'NOUN', "d's": 'NOUN', 'ign': 'NOUN', 'an': 'DET', 'ers': 'NOUN', 'we': 'PRON', 'You': 'PRON', 'J.': 'NOUN', 'ran': 'VERB', 'ple': 'X', 'ike': 'X', 'zon': 'NOUN', 'amn': 'ADJ', ':': '.', 'ops': 'VERB', 'Do': 'VERB', 'ion': 'NOUN', 'ena': 'NOUN', 'nes': 'NOUN', 'so': 'ADV', 'It': 'PRON', 'rew': 'VERB', 'how': 'ADV', 'ent': 'ADJ', 'ets': 'NOUN', 'ind': 'NOUN', 'eat': 'X', 'ote': 'VERB', 'aws': 'NOUN', 'go': 'VERB', 'dry': 'ADJ', 'sco': 'NOUN', 'rom': 'ADP', 'als': 'NOUN', 'My': 'DET', "a's": 'NOUN', 'We': 'PRON', 'iew': 'NOUN', 'tly': 'ADV', 'rts': 'NOUN', 'eys': 'NOUN', 'ait': 'VERB', "o's": 'NOUN', 'ger': 'ADJ', 'ant': 'ADJ', 'leg': 'NOUN', 'If': 'ADP', 'few': 'ADJ', 'ock': 'VERB', 'bel': 'NOUN', 'A': 'DET', 'met': 'VERB', 'ugh': 'ADP', 'lay': 'VERB', 'arm': 'NOUN', 'ken': 'VERB', 'oes': 'NOUN', 'raw': 'NOUN', 'Ma': 'NOUN', 'elt': 'VERB', 'opo': 'NOUN', 'mad': 'ADJ', 'ncy': 'NOUN', 'ato': 'NOUN', 'boy': 'NOUN', 'tel': 'NOUN', 'ors': 'NOUN', "y's": 'NOUN', 'bad': 'ADV', 'its': 'NOUN', 'urs': 'NOUN', 'iss': 'NOUN', 'ird': 'ADJ', '600': 'NUM', 'rly': 'ADV', 'dea': 'NOUN', '942': 'NUM'}
: {'led': 'VERB', 'her': 'X', 'of': 'ADP', 'to': 'X', 'esh': 'NOUN', 'irs': 'NOUN', 'est': 'ADJ', 'do': 'VERB', 'the': 'DET', 'nly': 'X', 'it': 'PRON', 'ing': 'X', 'I': 'PRON', 'tes': 'NOUN', ';': '.', 'get': 'VERB', 'oth': 'X', 'hat': 'X', '!': '.', ',': '.', 'ble': 'ADJ', 'his': 'DET', 'ung': 'VERB', 'And': 'CONJ', 'een': 'X', 'son': 'NOUN', "n't": 'VERB', 'ain': 'NOUN', 'elf': 'PRON', 'red': 'X', 'a': 'DET', 'hem': 'PRON', 'ese': 'DET', 'He': 'PRON', '.': '.', 'our': 'X', 'gly': 'ADV', 'he': 'PRON', '?': '.', 'ess': 'X', 'ell': 'X', 'ial': 'NOUN', 'now': 'X', 'ied': 'VERB', 'oke': 'VERB', 'ire': 'NOUN', 'ong': 'X', 'icy': 'ADJ', 'for': 'ADP', 'but': 'CONJ', 'new': 'X', 'lin': 'NOUN', 'den': 'ADJ', 'ete': 'ADJ', 'ris': 'NOUN', 'ped': 'VERB', 'uch': 'ADJ', 'ere': 'X', 'him': 'PRON', 'nty': 'X', 'off': 'PRT', 'hen': 'ADV', 'up': 'PRT', 'ove': 'ADP', 'hey': 'PRON', 'and': 'X', 'not': 'ADV', 'ver': 'X', 'ded': 'X', 'if': 'ADP', 'ter': 'X', 'ges': 'NOUN', 'sly': 'X', 'rse': 'NOUN', 'is': 'VERB', 'aid': 'VERB', 'ink': 'ADJ', 'fer': 'VERB', 'int': 'NOUN', 'had': 'VERB', 'she': 'PRON', 'nto': 'ADP', 'ide': 'X', 'cer': 'NOUN', 'are': 'VERB', 'ime': 'NOUN', 'ves': 'NOUN', 'ust': 'X', 'ody': 'NOUN', 'on': 'X', 'in': 'ADP', 'man': 'X', 'ose': 'X', 'der': 'NOUN', 'way': 'X', 'men': 'NOUN', 'ave': 'VERB', 'Sex': 'NOUN', 'ore': 'X', 'hly': 'ADV', '``': '.', 'bor': 'NOUN', 'ark': 'ADJ', 'use': 'NOUN', 'oel': 'NOUN', 'rns': 'NOUN', 'hes': 'NOUN', 'ate': 'X', 'ith': 'ADP', 'uld': 'VERB', 'ars': 'NOUN', 'eer': 'ADJ', 'eal': 'ADJ', 'you': 'PRON', 'was': 'VERB', 'box': 'NOUN', 'elp': 'VERB', 'rch': 'NOUN', 'ect': 'NOUN', 'ery': 'X', 'as': 'ADP', 'ork': 'X', 'oat': 'NOUN', 'ton': 'NOUN', 'ear': 'X', 'any': 'DET', 'one': 'X', 'tty': 'ADV', 'ity': 'NOUN', 'ner': 'NOUN', 'eel': 'X', 'dom': 'NOUN', 'ome': 'X', 'me': 'PRON', 'ght': 'X', "t's": 'PRT', "I'm": 'PRT', 'All': 'PRT', 'pid': 'ADJ', 'ill': 'X', 'my': 'DET', 'ont': 'ADJ', 'lly': 'ADV', 'by': 'ADP', 'out': 'X', 'nds': 'NOUN', "''": '.', 'ven': 'VERB', '500': 'NOUN', 'try': 'NOUN', 'oys': 'NOUN', 'ilk': 'NOUN', 'ked': 'VERB', 'rms': 'NOUN', 'fty': 'NUM', 'guy': 'NOUN', 'ful': 'X', 'act': 'NOUN', 'But': 'CONJ', 'ole': 'ADJ', 'ile': 'X', 'can': 'ADJ', 'ons': 'NOUN', 'nse': 'NOUN', 'God': 'NOUN', 'all': 'PRT', 'ern': 'NOUN', 'ses': 'VERB', 'So': 'ADV', 'ive': 'VERB', 'ved': 'VERB', 'unk': 'ADJ', 'ary': 'ADJ', 'ale': 'NOUN', 'urd': 'ADJ', 'lds': 'NOUN', 'The': 'DET', 'ook': 'X', 'set': 'NOUN', 'ack': 'X', 'nce': 'NOUN', 'pen': 'X', 'ady': 'X', 'igh': 'ADJ', '--': '.', 'own': 'PRT', 'rks': 'VERB', 'two': 'NUM', 'ays': 'X', 'nia': 'NOUN', 'ake': 'VERB', 'ted': 'X', 'thy': 'ADJ', 'ort': 'NOUN', 'ard': 'X', 'fas': 'NOUN', 'be': 'VERB', 'end': 'NOUN', 'old': 'X', 'Let': 'VERB', 'ier': 'NOUN', 'no': 'DET', 'did': 'VERB', 'ick': 'X', 'xed': 'VERB', 'fix': 'VERB', 'tle': 'X', 'ich': 'DET', '.S.': 'NOUN', 'ler': 'NOUN', 'or': 'CONJ', 'who': 'PRON', 'She': 'PRON', 'ine': 'NOUN', 'saw': 'VERB', 'ace': 'NOUN', 'Say': 'VERB', 'oft': 'ADJ', 'sed': 'VERB', 'age': 'NOUN', 'Now': 'ADV', 'let': 'NOUN', 'ots': 'NOUN', 'ite': 'ADJ', 'rth': 'ADV', 'ead': 'NOUN', 'kin': 'VERB', 'at': 'ADP', 'ten': 'NUM', 'ump': 'ADJ', 'row': 'ADJ', 'dew': 'NOUN', 'ice': 'VERB', 'Yet': 'CONJ', 'low': 'X', 'ned': 'VERB', 'ans': 'NOUN', 'ged': 'VERB', 'ood': 'X', 'eir': 'DET', 'ulk': 'NOUN', 'ife': 'NOUN', 'lap': 'NOUN', "d's": 'NOUN', 'ign': 'NOUN', 'an': 'DET', 'ers': 'NOUN', 'we': 'PRON', 'You': 'PRON', 'J.': 'NOUN', 'ran': 'VERB', 'ple': 'X', 'ike': 'X', 'zon': 'NOUN', 'amn': 'ADJ', ':': '.', 'ops': 'VERB', 'Do': 'VERB', 'ion': 'NOUN', 'ena': 'NOUN', 'nes': 'NOUN', 'so': 'ADV', 'It': 'PRON', 'rew': 'VERB', 'how': 'ADV', 'ent': 'ADJ', 'ets': 'NOUN', 'ind': 'NOUN', 'eat': 'X', 'ote': 'VERB', 'aws': 'NOUN', 'go': 'VERB', 'dry': 'ADJ', 'sco': 'NOUN', 'rom': 'ADP', 'als': 'NOUN', 'My': 'DET', "a's": 'NOUN', 'We': 'PRON', 'iew': 'NOUN', 'tly': 'ADV', 'rts': 'NOUN', 'eys': 'NOUN', 'ait': 'VERB', "o's": 'NOUN', 'ger': 'ADJ', 'ant': 'ADJ', 'leg': 'NOUN', 'If': 'ADP', 'few': 'ADJ', 'ock': 'VERB', 'bel': 'NOUN', 'A': 'DET', 'met': 'VERB', 'ugh': 'ADP', 'lay': 'VERB', 'arm': 'NOUN', 'ken': 'VERB', 'oes': 'NOUN', 'raw': 'NOUN', 'Ma': 'NOUN', 'elt': 'VERB', 'opo': 'NOUN', 'mad': 'ADJ', 'ncy': 'NOUN', 'ato': 'NOUN', 'boy': 'NOUN', 'tel': 'NOUN', 'ors': 'NOUN', "y's": 'NOUN', 'bad': 'ADV', 'its': 'NOUN', 'urs': 'NOUN', 'iss': 'NOUN', 'ird': 'ADJ', '600': 'NUM', 'rly': 'ADV', 'dea': 'NOUN', '942': 'NUM'}
: [({'word_ending': 'if'}, 'ADP'), ({'word_ending': 'and'}, 'CONJ'), ({'word_ending': 'ent'}, 'X'), ({'word_ending': 'his'}, 'DET'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': 'lor'}, 'NOUN'), ({'word_ending': 'ged'}, 'VERB'), ({'word_ending': 'est'}, 'NOUN'), ({'word_ending': ':'}, '.'), ({'word_ending': 'she'}, 'PRON'), ({'word_ending': 'ver'}, 'ADP'), ({'word_ending': 'ner'}, 'NOUN'), ({'word_ending': 'in'}, 'ADP'), ({'word_ending': ','}, '.'), ({'word_ending': 'els'}, 'NOUN'), ({'word_ending': 'hty'}, 'ADV'), ({'word_ending': 'oad'}, 'NOUN'), ({'word_ending': 'ing'}, 'X'), ({'word_ending': 'saw'}, 'NOUN'), ({'word_ending': 'Pa'}, 'NOUN'), ({'word_ending': 'of'}, 'ADP'), ({'word_ending': 'how'}, 'VERB'), ({'word_ending': '--'}, '.'), ({'word_ending': 'ses'}, 'NOUN'), ({'word_ending': 'ice'}, 'NOUN'), ({'word_ending': 'oel'}, 'NOUN'), ({'word_ending': 'ill'}, 'ADV'), ({'word_ending': 'ike'}, 'ADP'), ({'word_ending': 'ave'}, 'VERB'), ({'word_ending': 'ese'}, 'DET'), ({'word_ending': 'ole'}, 'ADJ'), ({'word_ending': '!'}, '.'), ({'word_ending': '``'}, '.'), ({'word_ending': 'ura'}, 'NOUN'), ({'word_ending': 'to'}, 'X'), ({'word_ending': "''"}, '.'), ({'word_ending': 'ble'}, 'ADJ'), ({'word_ending': 'be'}, 'VERB'), ({'word_ending': 'ary'}, 'NOUN'), ({'word_ending': 'not'}, 'ADV'), ({'word_ending': 'ons'}, 'NOUN'), ({'word_ending': 'way'}, 'NOUN'), ({'word_ending': 'at'}, 'ADP'), ({'word_ending': 'ome'}, 'X'), ({'word_ending': '.'}, '.'), ({'word_ending': ';'}, '.'), ({'word_ending': 'an'}, 'DET'), ({'word_ending': 'her'}, 'DET'), ({'word_ending': 'mph'}, 'NOUN'), ({'word_ending': 'age'}, 'NOUN'), ({'word_ending': 'ere'}, 'X'), ({'word_ending': 'out'}, 'X'), ({'word_ending': 'ved'}, 'VERB'), ({'word_ending': 'act'}, 'VERB'), ({'word_ending': 'up'}, 'PRT'), ({'word_ending': 'The'}, 'DET'), ({'word_ending': 'rly'}, 'ADV'), ({'word_ending': 'ite'}, 'ADJ'), ({'word_ending': 'ond'}, 'ADJ'), ({'word_ending': 'tle'}, 'ADJ'), ({'word_ending': 'hen'}, 'NOUN'), ({'word_ending': 'was'}, 'VERB'), ({'word_ending': 'und'}, 'NOUN'), ({'word_ending': 'ter'}, 'NOUN'), ({'word_ending': 'low'}, 'VERB'), ({'word_ending': 'tor'}, 'NOUN'), ({'word_ending': 'He'}, 'PRON'), ({'word_ending': 'ank'}, 'NOUN'), ({'word_ending': 'it'}, 'PRON'), ({'word_ending': "n's"}, 'NOUN'), ({'word_ending': 'med'}, 'VERB'), ({'word_ending': 'him'}, 'PRON'), ({'word_ending': 'a'}, 'DET'), ({'word_ending': "d's"}, 'NOUN')]
: Accuracy: 39.19%
: Most Informative Features

The accuracy of the naive bayes is quite low. Added the 'X' tags drops the
accurary by quite a bit and makes the model not output the most informative
features. For comparison we will include what happens when we do not add
the 'X' tags.

#+begin_src python :results output
import nltk
from nltk.classify import NaiveBayesClassifier
from nltk.metrics import accuracy
import random
from nltk.corpus import brown

words = brown.tagged_words(categories='fiction', tagset='universal')
# Random seed so we always get the same output from the random sample
random.seed(a=7740)
data_set = random.sample(list(words), 1000)
train_data = data_set[:900]
test_data = data_set[900:]

print(train_data)
def prepare_data_for_classifier(data):
    return [({'word_ending': word[-3:]}, tag) for word, tag in data]

# Prepare the data
train_set = prepare_data_for_classifier(train_data)
test_set = prepare_data_for_classifier(test_data)
print(test_set)
# Train the Naive Bayes Classifier
classifier = NaiveBayesClassifier.train(train_set)

# Evaluate the classifier
accuracy = nltk.classify.accuracy(classifier, test_set)
print(f"Accuracy: {accuracy * 100:.2f}%")

# Display the 10 most informative features
classifier.show_most_informative_features(10)
#+end_src

#+results:
#+begin_example
[('house', 'NOUN'), ('bet', 'VERB'), ('the', 'DET'), ('hotels', 'NOUN'), ('and', 'CONJ'), ('broke', 'VERB'), ('about', 'ADV'), ('a', 'DET'), ('phrase', 'NOUN'), ('no', 'DET'), ('just', 'ADV'), ('of', 'ADP'), ('in', 'ADP'), ('the', 'DET'), ('to', 'PRT'), ('questions', 'NOUN'), ('The', 'DET'), ('No', 'ADV'), ('it', 'PRON'), ('.', '.'), ('``', '.'), ('of', 'ADP'), ('door', 'NOUN'), ('toward', 'ADP'), ('the', 'DET'), ('ice-chest', 'NOUN'), ('worry', 'VERB'), (',', '.'), ('.', '.'), ('happen', 'VERB'), ('.', '.'), ('childhood', 'NOUN'), ('to', 'PRT'), ('so', 'ADV'), ('If', 'ADP'), ('New', 'ADJ'), ('more', 'ADV'), ('south', 'NOUN'), ('gouged', 'VERB'), ("ain't", 'VERB'), ('panic', 'NOUN'), (';', '.'), ('of', 'ADP'), ('.', '.'), ('in', 'ADP'), ('look', 'NOUN'), ('this', 'DET'), ('better', 'ADV'), ('nothing', 'NOUN'), ('I', 'PRON'), ('center', 'NOUN'), ('with', 'ADP'), ('.', '.'), ('waiting', 'VERB'), ('.', '.'), ('bed', 'NOUN'), ('young', 'ADJ'), (':', '.'), ('all', 'PRT'), ('That', 'DET'), ('and', 'CONJ'), ('fatigue', 'NOUN'), ('will', 'VERB'), ('taken', 'VERB'), ('a', 'DET'), ('unbroken', 'ADJ'), ('drawings', 'NOUN'), ('I', 'PRON'), ('was', 'VERB'), ('a', 'DET'), ('.', '.'), ('was', 'VERB'), ('at', 'ADP'), (',', '.'), ('Anthony', 'NOUN'), ('``', '.'), ('had', 'VERB'), ('that', 'ADP'), ('under', 'ADP'), ('he', 'PRON'), ('While', 'ADP'), ('certainly', 'ADV'), ('house', 'NOUN'), ('ran', 'VERB'), ('too', 'ADV'), ('when', 'ADV'), ('``', '.'), ('Catholics', 'NOUN'), ('him', 'PRON'), ('preaching', 'VERB'), ('for', 'ADP'), ('mining', 'VERB'), ('ring', 'NOUN'), ('over', 'ADP'), ('the', 'DET'), ('kind', 'NOUN'), ('.', '.'), ('``', '.'), ('He', 'PRON'), ('ground', 'NOUN'), ('to', 'PRT'), ('this', 'DET'), ('.', '.'), ('The', 'DET'), ("''", '.'), ('cover', 'NOUN'), ('patronne', 'X'), ('flick', 'NOUN'), ('that', 'DET'), ('Connections', 'NOUN'), ('were', 'VERB'), ('needles', 'NOUN'), ('the', 'DET'), ('say', 'VERB'), ('.', '.'), ('ready', 'ADJ'), ('myself', 'PRON'), ('but', 'CONJ'), ('it', 'PRON'), ('I', 'PRON'), ('.', '.'), ('just', 'ADV'), ('about', 'ADP'), ('sketching', 'VERB'), ('and', 'CONJ'), ('yellowing', 'VERB'), ('she', 'PRON'), ('Five', 'NUM'), ('the', 'DET'), ('the', 'DET'), ("o'clock", 'ADV'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('ducks', 'NOUN'), ('into', 'ADP'), ('necessary', 'ADJ'), ('whereas', 'ADP'), ('time', 'NOUN'), ('presence', 'NOUN'), ('desires', 'NOUN'), (',', '.'), ('years', 'NOUN'), ('reply', 'NOUN'), ('autumn', 'NOUN'), ('down', 'PRT'), ('read', 'VERB'), ('what', 'DET'), ('.', '.'), ('dumped', 'VERB'), ('things', 'NOUN'), ('cleaned', 'VERB'), ('expected', 'VERB'), ('him', 'PRON'), ('before', 'ADP'), ('my', 'DET'), ('.', '.'), ('in', 'ADP'), ('sold', 'VERB'), ('Argiento', 'NOUN'), ('rent', 'NOUN'), ('.', '.'), ('on', 'ADP'), ('head', 'NOUN'), ('meaning', 'NOUN'), ('conduct', 'NOUN'), ('was', 'VERB'), ('had', 'VERB'), ('.', '.'), ('while', 'ADP'), ('.', '.'), ('is', 'VERB'), ('seeming', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('a', 'DET'), ('girl', 'NOUN'), ("Jack's", 'NOUN'), ('Miss', 'NOUN'), ('He', 'PRON'), ('Warsaw', 'NOUN'), ('are', 'VERB'), ('lights', 'NOUN'), ('to', 'PRT'), ("one's", 'NOUN'), ('abed', 'ADV'), ("''", '.'), ('her', 'DET'), ('.', '.'), ('seemed', 'VERB'), ('start', 'VERB'), ('among', 'ADP'), ('skin', 'NOUN'), ('could', 'VERB'), ('be', 'VERB'), ('thick', 'ADJ'), ('plates', 'NOUN'), ('fine-looking', 'ADJ'), (',', '.'), ('in', 'ADP'), ('early', 'ADV'), ('a', 'DET'), ('.', '.'), ('been', 'VERB'), ('would', 'VERB'), ("''", '.'), (',', '.'), ('.', '.'), ('do', 'VERB'), ('Here', 'ADV'), ('and', 'CONJ'), ('hurry', 'NOUN'), ('thought', 'VERB'), ('a', 'DET'), ('she', 'PRON'), ('wedding', 'NOUN'), ('make', 'VERB'), ('neglected', 'VERB'), ('whiskey', 'NOUN'), ('one', 'NUM'), ('a', 'DET'), ('She', 'PRON'), ('what', 'DET'), ('he', 'PRON'), ('however', 'ADV'), (',', '.'), ('it', 'PRON'), ('far', 'ADV'), ('smile', 'NOUN'), ('a', 'DET'), ('the', 'DET'), ('calumny', 'NOUN'), ('the', 'DET'), ('.', '.'), ('marble', 'NOUN'), ('Bowman', 'NOUN'), ('into', 'ADP'), ('clothes', 'NOUN'), ('the', 'DET'), (',', '.'), ('chose', 'VERB'), ('floor', 'NOUN'), ('how', 'ADV'), ('hand', 'NOUN'), ('He', 'PRON'), ('make', 'VERB'), ('While', 'ADP'), ('you', 'PRON'), ('of', 'ADP'), ('and', 'CONJ'), ('``', '.'), ('of', 'ADP'), ('Oh', 'PRT'), ('married', 'VERB'), ('Council', 'NOUN'), ('borrowed', 'VERB'), ('as', 'ADP'), ('like', 'ADP'), ('What', 'DET'), ('what', 'DET'), (',', '.'), ('become', 'VERB'), ('seem', 'VERB'), ('.', '.'), ('identity', 'NOUN'), (',', '.'), ('in', 'ADP'), ('went', 'VERB'), (',', '.'), ('Your', 'DET'), ('and', 'CONJ'), ("''", '.'), ('complete', 'ADJ'), ('if', 'ADP'), (',', '.'), ('three', 'NUM'), ('she', 'PRON'), ('Rector', 'NOUN'), ('knowing', 'VERB'), ('to', 'PRT'), ('cabins', 'NOUN'), ('maybe', 'ADV'), ('milk', 'NOUN'), ('no', 'DET'), ('bedroom', 'NOUN'), ('the', 'DET'), ('postmark', 'NOUN'), ('waded', 'VERB'), ('one', 'NUM'), ('.', '.'), ('here', 'ADV'), ('pitcher', 'NOUN'), ('his', 'DET'), ('grunt', 'VERB'), ('.', '.'), ('shook', 'VERB'), ('Seventh', 'ADJ'), ('even', 'ADV'), ('grounds', 'NOUN'), ("''", '.'), ('beset', 'VERB'), ('in', 'ADP'), (',', '.'), ('smoked', 'VERB'), ('it', 'PRON'), (',', '.'), ('afterward', 'ADV'), ('progress', 'NOUN'), ('being', 'VERB'), ('and', 'CONJ'), ('a', 'DET'), ('saw', 'VERB'), ("''", '.'), ('and', 'CONJ'), ('nuns', 'NOUN'), ('church', 'NOUN'), ('above', 'ADV'), ('took', 'VERB'), ('the', 'DET'), ('.', '.'), ('.', '.'), ('climbed', 'VERB'), ('not', 'ADV'), ('in', 'ADP'), ('her', 'PRON'), ('a', 'DET'), ('the', 'DET'), ('top', 'NOUN'), ('Thelma', 'NOUN'), ('worked', 'VERB'), ('placed', 'VERB'), ('to', 'ADP'), ('and', 'CONJ'), ('Lying', 'VERB'), ('his', 'DET'), ('fork', 'NOUN'), ('willya', 'VERB'), ('amount', 'NOUN'), ('himself', 'PRON'), (',', '.'), ('Papa', 'NOUN'), ('of', 'ADP'), ("one's", 'NOUN'), ('sick', 'ADJ'), ('into', 'ADP'), ('remained', 'VERB'), (',', '.'), ('Kate', 'NOUN'), ('deserving', 'ADJ'), ('beans', 'NOUN'), ('his', 'DET'), ('hand', 'NOUN'), ('the', 'DET'), ('a', 'DET'), ('He', 'PRON'), ('slapped', 'VERB'), ('whisky', 'NOUN'), ('the', 'DET'), (',', '.'), ('was', 'VERB'), ('poncho', 'NOUN'), ('said', 'VERB'), ('well', 'ADV'), ('wrist', 'NOUN'), ('that', 'ADP'), ('reach', 'VERB'), ('final', 'ADJ'), ('and', 'CONJ'), ('squad', 'NOUN'), ('conditions', 'NOUN'), ('ground', 'NOUN'), ('dope-ridden', 'ADJ'), ('for', 'ADP'), ('flew', 'VERB'), (',', '.'), ('I', 'PRON'), ('?', '.'), ('if', 'ADP'), ('bosom', 'NOUN'), ('Negro', 'NOUN'), ('there', 'PRT'), ('.', '.'), ('the', 'DET'), (',', '.'), ('.', '.'), (',', '.'), ('but', 'CONJ'), ('and', 'CONJ'), ('her', 'PRON'), ('winds', 'NOUN'), (',', '.'), ('of', 'ADP'), ('.', '.'), ('Harpers', 'NOUN'), ('no', 'DET'), ('had', 'VERB'), ('on', 'ADP'), ("They'll", 'PRT'), ('nose', 'NOUN'), ('went', 'VERB'), ('the', 'DET'), ('and', 'CONJ'), (',', '.'), ('the', 'DET'), ('behind', 'ADP'), ('town', 'NOUN'), ('and', 'CONJ'), ('of', 'ADP'), ('have', 'VERB'), ('asleep', 'ADV'), (',', '.'), ('of', 'ADP'), ('when', 'ADV'), ('of', 'ADP'), ('that', 'PRON'), ('and', 'CONJ'), ('deep-set', 'ADJ'), ('him', 'PRON'), ('?', '.'), ('.', '.'), ('it', 'PRON'), (',', '.'), ('to', 'PRT'), ('fishers', 'NOUN'), ('The', 'DET'), ('never', 'ADV'), ('of', 'ADP'), ('found', 'VERB'), ('were', 'VERB'), ('out', 'PRT'), ('the', 'DET'), ('know', 'VERB'), ('we', 'PRON'), ('coat', 'NOUN'), ("''", '.'), ('room', 'NOUN'), ('``', '.'), ('to', 'PRT'), ('seen', 'VERB'), ('she', 'PRON'), ('.', '.'), ('.', '.'), ('for', 'ADP'), ('towels', 'NOUN'), ('no', 'DET'), ('order', 'NOUN'), ('chambermaid', 'NOUN'), ('the', 'DET'), ('find', 'VERB'), ('transfer', 'NOUN'), ('let', 'VERB'), ('slums', 'NOUN'), (',', '.'), ('Take', 'VERB'), ('a', 'DET'), ('the', 'DET'), ('natural', 'ADJ'), ('or', 'CONJ'), (',', '.'), ('brought', 'VERB'), ('recognized', 'VERB'), ('He', 'PRON'), ('found', 'VERB'), ('big', 'ADJ'), ('went', 'VERB'), ('said', 'VERB'), ('wife', 'NOUN'), ('can', 'VERB'), ('desire', 'NOUN'), ('from', 'ADP'), ('those', 'DET'), ('the', 'DET'), ('express', 'NOUN'), ('Byron', 'NOUN'), ('meeting', 'NOUN'), ('himself', 'PRON'), ('else', 'ADV'), ('food', 'NOUN'), ('with', 'ADP'), ('done', 'VERB'), ('in', 'ADP'), ('in', 'ADP'), ('they', 'PRON'), ('sandy', 'ADJ'), ('crisis', 'NOUN'), ('I', 'PRON'), ('the', 'DET'), ('the', 'DET'), ('doctor', 'NOUN'), ('Treasury', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('Good-by', 'PRT'), ('and', 'CONJ'), ('Duclos', 'NOUN'), ('Sundays', 'NOUN'), ('and', 'CONJ'), ('kissing', 'VERB'), ('to', 'PRT'), ('He', 'PRON'), ('would', 'VERB'), (';', '.'), ('bastards', 'NOUN'), ('become', 'VERB'), ('directory', 'NOUN'), ('moonlight', 'NOUN'), ('beyond', 'ADV'), ('mean', 'VERB'), ('had', 'VERB'), ('had', 'VERB'), ('Adam', 'NOUN'), ('upstairs', 'ADV'), ('a', 'DET'), ('test', 'NOUN'), ('people', 'NOUN'), ('bone', 'NOUN'), ('I', 'PRON'), ('it', 'PRON'), ('said', 'VERB'), ('did', 'VERB'), ('would', 'VERB'), ('from', 'ADP'), (',', '.'), ('a', 'DET'), ('``', '.'), (',', '.'), ('I', 'PRON'), ('and', 'CONJ'), ('have', 'VERB'), ('.', '.'), ('bad', 'ADJ'), ('about', 'ADP'), ('playing', 'VERB'), ('provincial', 'ADJ'), ("''", '.'), ('There', 'PRT'), ('way', 'NOUN'), ('Anthony', 'NOUN'), ('man', 'NOUN'), ('of', 'ADP'), ('rest', 'NOUN'), ('!', '.'), ('days', 'NOUN'), ('all', 'PRT'), (',', '.'), ('She', 'PRON'), ('reason', 'NOUN'), ('God', 'NOUN'), ('.', '.'), ('junction', 'NOUN'), ('general', 'ADJ'), ('difficulty', 'NOUN'), ('would', 'VERB'), ('poured', 'VERB'), ('tipped', 'VERB'), ('They', 'PRON'), (',', '.'), ('for', 'ADP'), ('I', 'PRON'), ('box', 'NOUN'), ('those', 'DET'), ("I've", 'PRT'), ('.', '.'), ('had', 'VERB'), ('glow', 'NOUN'), ('scent', 'NOUN'), ('Army', 'NOUN'), ('on', 'ADP'), ('marched', 'VERB'), ('had', 'VERB'), ('very', 'ADV'), ('or', 'CONJ'), ('?', '.'), ('he', 'PRON'), ('in', 'ADP'), ('deacon', 'NOUN'), ('at', 'ADP'), ('.', '.'), ('seems', 'VERB'), ('.', '.'), ('bright', 'ADJ'), ('a', 'DET'), ('beard', 'NOUN'), ('them', 'PRON'), ('like', 'ADP'), ('the', 'DET'), ('.', '.'), ('your', 'DET'), ('it', 'PRON'), ('drizzle', 'NOUN'), ('fact', 'NOUN'), ('Scout', 'NOUN'), ('of', 'ADP'), ('never', 'ADV'), ('for', 'ADP'), (',', '.'), (',', '.'), ('beer', 'NOUN'), ('``', '.'), ('her', 'DET'), ('a', 'DET'), ('on', 'ADP'), ('besides', 'ADV'), ('futility', 'NOUN'), ('suddenly', 'ADV'), ('of', 'ADP'), ('Methodist', 'ADJ'), ('needled', 'VERB'), ('about', 'ADP'), (',', '.'), ('barley', 'NOUN'), ('heroes', 'NOUN'), ('his', 'DET'), ("''", '.'), ('serve', 'VERB'), ("''", '.'), ('Christ', 'NOUN'), ('with', 'ADP'), ('When', 'ADV'), ('men', 'NOUN'), ('offered', 'VERB'), ('.', '.'), ('be', 'VERB'), ('a', 'DET'), ('Bathyran', 'ADJ'), ('them', 'PRON'), ('hot', 'ADJ'), ('several', 'ADJ'), ('.', '.'), ('These', 'DET'), ('chambre', 'X'), ('of', 'ADP'), ('the', 'DET'), ('cathedrals', 'NOUN'), ('heavily', 'ADV'), ('insides', 'NOUN'), ('over', 'ADP'), ('ran', 'VERB'), ('troubled', 'VERB'), ('but', 'CONJ'), ('single', 'ADJ'), ('in', 'ADP'), ('go', 'VERB'), ('back', 'ADV'), ('or', 'CONJ'), ('hundred', 'NUM'), ('Then', 'ADV'), ('And', 'CONJ'), ('keeping', 'VERB'), ('an', 'DET'), ('not', 'ADV'), ('ones', 'NOUN'), ('eyes', 'NOUN'), ('was', 'VERB'), ('anyway', 'ADV'), ('up', 'ADP'), ('He', 'PRON'), ('hearing', 'VERB'), ('superior', 'ADJ'), ('expression', 'NOUN'), ('think', 'VERB'), (':', '.'), ('of', 'ADP'), ('things', 'NOUN'), ('.', '.'), ('was', 'VERB'), ('had', 'VERB'), ('house', 'NOUN'), ('got', 'VERB'), ('in', 'ADP'), ('eighty-three', 'NUM'), ('Do', 'VERB'), ('miss', 'VERB'), ('the', 'DET'), ('as', 'ADP'), ('he', 'PRON'), ('a', 'DET'), ('and', 'CONJ'), ('neither', 'CONJ'), ('about', 'ADP'), ('spitting', 'VERB'), ('night', 'NOUN'), ('and', 'CONJ'), ('sticks', 'NOUN'), ('street', 'NOUN'), ('and', 'CONJ'), ('It', 'PRON'), ('hostelries', 'NOUN'), ('word', 'NOUN'), ('``', '.'), ('given', 'VERB'), ('A', 'DET'), ('breakfast', 'NOUN'), ('dying', 'VERB'), ('and', 'CONJ'), ('rapidly', 'ADV'), ('over', 'ADP'), ('You', 'PRON'), ('would', 'VERB'), ('the', 'DET'), ('thick', 'ADJ'), (',', '.'), ('signal', 'NOUN'), ('triumphant', 'ADJ'), (',', '.'), ('who', 'PRON'), ('cracked', 'VERB'), ('finger', 'NOUN'), ('anything', 'NOUN'), (':', '.'), ('well-stuffed', 'ADJ'), ('was', 'VERB'), (';', '.'), ('compelled', 'VERB'), ('?', '.'), ('the', 'DET'), ('after', 'ADP'), ('.', '.'), ('whether', 'ADP'), ('--', '.'), ('the', 'DET'), ('.', '.'), ('?', '.'), ('the', 'DET'), ('more', 'ADJ'), ('.', '.'), ('are', 'VERB'), ('try', 'VERB'), ('of', 'ADP'), ('it', 'PRON'), ('without', 'ADP'), ('I', 'PRON'), ('``', '.'), ('perhaps', 'ADV'), ('!', '.'), ('wicked', 'ADJ'), ('of', 'ADP'), ('eyebrow', 'NOUN'), ('throbbing', 'NOUN'), ('had', 'VERB'), ('the', 'DET'), ('successful', 'ADJ'), ('to', 'ADP'), ('.', '.'), ('he', 'PRON'), ('audience', 'NOUN'), ('moist', 'ADJ'), ('until', 'ADP'), ('what', 'DET'), (',', '.'), ('to', 'PRT'), ('and', 'CONJ'), ('kill', 'VERB'), ('sip', 'NOUN'), ('and', 'CONJ'), ('bolt', 'NOUN'), (',', '.'), (',', '.'), ('sure', 'VERB'), ('the', 'DET'), ('.', '.'), ('a', 'DET'), ('of', 'ADP'), ('leather', 'NOUN'), ('to', 'ADP'), ('all', 'PRT'), ('of', 'ADP'), ('soft', 'ADJ'), ('air', 'NOUN'), ('house', 'NOUN'), ('the', 'DET'), ('is', 'VERB'), ('mark', 'NOUN'), ('among', 'ADP'), ('they', 'PRON'), ('.', '.'), ('it', 'PRON'), ('?', '.'), ('a', 'DET'), ('breeches', 'NOUN'), ('when', 'ADV'), ('speak', 'VERB'), ('men', 'NOUN'), ('he', 'PRON'), ('boys', 'NOUN'), ('a', 'DET'), ('he', 'PRON'), ('to', 'ADP'), ('knack', 'NOUN'), ('the', 'DET'), ('.', '.'), ('the', 'DET'), ('He', 'PRON'), ('and', 'CONJ'), ('studio', 'NOUN'), ('undo', 'VERB'), ('.', '.'), ('baby', 'NOUN'), ('So', 'ADV'), ('working', 'VERB'), ('as', 'ADP'), ('The', 'DET'), ('a', 'DET'), ('right', 'ADV'), ('have', 'VERB'), ('long', 'ADJ'), ('until', 'ADP'), ('where', 'ADV'), ('now', 'ADV'), ('awkwardly', 'ADV'), ('months', 'NOUN'), ('When', 'ADV'), ('brandy', 'NOUN'), ('be', 'VERB'), ('city', 'NOUN'), (',', '.'), ('the', 'DET'), ('my', 'DET'), ('had', 'VERB'), ('armpits', 'NOUN'), ('told', 'VERB'), ('stairs', 'NOUN'), ('front', 'ADJ'), ('was', 'VERB'), ('was', 'VERB'), ('looked', 'VERB'), ('arm', 'NOUN'), ('medicines', 'NOUN'), ('teaspoonful', 'NOUN'), ('merging', 'VERB'), ('came', 'VERB'), ('?', '.'), ('Before', 'ADP'), ('the', 'DET'), ('kept', 'VERB'), ('populace', 'NOUN'), ('what', 'DET'), ('toward', 'ADP'), ('.', '.'), ('.', '.'), ('Styka', 'NOUN'), ('all', 'PRT'), ('them', 'PRON'), ('screeching', 'VERB'), (',', '.'), ('his', 'DET'), ('a', 'DET'), ('Otherwise', 'ADV'), ('men', 'NOUN'), ('not', 'ADV'), ('mad', 'ADJ'), ('sense', 'NOUN'), ('?', '.'), ('jackdaws', 'NOUN'), ('.', '.'), ('Here', 'ADV'), ('what', 'DET'), ('solid', 'ADJ'), ('dared', 'VERB'), ('in', 'ADP'), ('was', 'VERB'), ('figure', 'NOUN'), ('impossible', 'ADJ'), ('no', 'DET'), ('from', 'ADP'), ('arm', 'NOUN'), ('Art', 'NOUN'), ('The', 'DET'), ('his', 'DET'), ('work', 'NOUN'), ('safety', 'NOUN'), ('little', 'ADJ'), ('.', '.'), ('.', '.'), ('every', 'DET'), ('English-Dutch', 'ADJ'), ('Good', 'ADJ'), ('know', 'VERB'), ('later', 'ADV'), ('amazed', 'VERB'), ('hearing', 'VERB'), ('tolerated', 'VERB'), ('to', 'PRT'), ('Who', 'PRON'), ('those', 'DET'), ('himself', 'PRON'), ('merveilleux', 'X'), ('upstairs', 'ADV'), ('away', 'ADV'), ('Kayabashi', 'NOUN'), ('could', 'VERB'), ('?', '.'), (',', '.'), ('hopped', 'VERB'), ('in', 'ADP'), ('divine', 'ADJ'), ('proud', 'ADJ'), ('sung', 'VERB'), ('grace', 'NOUN')]
[({'word_ending': 'hat'}, 'ADP'), ({'word_ending': 'ade'}, 'VERB'), ({'word_ending': 'nce'}, 'ADP'), ({'word_ending': 'ear'}, 'ADJ'), ({'word_ending': 'ked'}, 'VERB'), ({'word_ending': 'Not'}, 'ADV'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': '.'}, '.'), ({'word_ending': 'ust'}, 'VERB'), ({'word_ending': 'not'}, 'ADV'), ({'word_ending': "''"}, '.'), ({'word_ending': ','}, '.'), ({'word_ending': 'new'}, 'VERB'), ({'word_ending': 'it'}, 'PRON'), ({'word_ending': 'to'}, 'PRT'), ({'word_ending': 'use'}, 'NOUN'), ({'word_ending': 'ait'}, 'NOUN'), ({'word_ending': 'ind'}, 'VERB'), ({'word_ending': 'ore'}, 'ADP'), ({'word_ending': 'hes'}, 'NOUN'), ({'word_ending': 'The'}, 'DET'), ({'word_ending': 'eep'}, 'ADV'), ({'word_ending': 'ney'}, 'NOUN'), ({'word_ending': ','}, '.'), ({'word_ending': 'ere'}, 'VERB'), ({'word_ending': 'on'}, 'ADP'), ({'word_ending': '.'}, '.'), ({'word_ending': 'ted'}, 'VERB'), ({'word_ending': 'ped'}, 'VERB'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': 'ded'}, 'VERB'), ({'word_ending': 'hed'}, 'VERB'), ({'word_ending': 'We'}, 'PRON'), ({'word_ending': '.'}, '.'), ({'word_ending': '.'}, '.'), ({'word_ending': ';'}, '.'), ({'word_ending': 'day'}, 'NOUN'), ({'word_ending': 'a'}, 'DET'), ({'word_ending': 'ave'}, 'VERB'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': 'to'}, 'PRT'), ({'word_ending': 'of'}, 'ADP'), ({'word_ending': '``'}, '.'), ({'word_ending': 'ain'}, 'NOUN'), ({'word_ending': 'he'}, 'PRON'), ({'word_ending': '.'}, '.'), ({'word_ending': 'rst'}, 'ADV'), ({'word_ending': 'end'}, 'VERB'), ({'word_ending': 'to'}, 'PRT'), ({'word_ending': 'nel'}, 'NOUN'), ({'word_ending': 'sed'}, 'VERB'), ({'word_ending': 'lly'}, 'NOUN'), ({'word_ending': 'ard'}, 'ADJ'), ({'word_ending': 'ime'}, 'NOUN'), ({'word_ending': 'an'}, 'DET'), ({'word_ending': 'in'}, 'ADP'), ({'word_ending': 'rst'}, 'ADJ'), ({'word_ending': 'one'}, 'NOUN'), ({'word_ending': 'ife'}, 'NOUN'), ({'word_ending': 'rth'}, 'NOUN'), ({'word_ending': 'ver'}, 'DET'), ({'word_ending': 'ual'}, 'NOUN'), ({'word_ending': '.'}, '.'), ({'word_ending': 'a'}, 'DET'), ({'word_ending': 'bts'}, 'NOUN'), ({'word_ending': 'of'}, 'ADP'), ({'word_ending': 'een'}, 'NOUN'), ({'word_ending': 'at'}, 'ADP'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': 'was'}, 'VERB'), ({'word_ending': 'her'}, 'NOUN'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': '.'}, '.'), ({'word_ending': 'oss'}, 'NOUN'), ({'word_ending': 'tor'}, 'NOUN'), ({'word_ending': 'ues'}, 'NOUN'), ({'word_ending': 'hen'}, 'ADV'), ({'word_ending': 'air'}, 'NOUN'), ({'word_ending': 'ows'}, 'NOUN'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': '.'}, '.'), ({'word_ending': 'rs.'}, 'NOUN'), ({'word_ending': 'who'}, 'PRON'), ({'word_ending': 'ism'}, 'NOUN'), ({'word_ending': 'it'}, 'PRON'), ({'word_ending': 'nto'}, 'ADP'), ({'word_ending': '.'}, '.'), ({'word_ending': 'ker'}, 'NOUN'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': ','}, '.'), ({'word_ending': "''"}, '.'), ({'word_ending': '?'}, '.'), ({'word_ending': 'is'}, 'VERB'), ({'word_ending': ','}, '.'), ({'word_ending': 'out'}, 'PRT'), ({'word_ending': 'was'}, 'VERB'), ({'word_ending': 'the'}, 'DET'), ({'word_ending': 'She'}, 'PRON'), ({'word_ending': 'ike'}, 'ADP'), ({'word_ending': 'led'}, 'VERB')]
Accuracy: 80.00%
Most Informative Features
             word_ending = 'and'            CONJ : NOUN   =     18.0 : 1.0
             word_ending = 'hat'             DET : PRON   =      5.3 : 1.0
             word_ending = 'ing'            VERB : ADJ    =      5.1 : 1.0
             word_ending = 'out'             ADP : NOUN   =      5.0 : 1.0
             word_ending = 'ick'             ADJ : NOUN   =      4.0 : 1.0
             word_ending = 'ver'             ADV : NOUN   =      3.8 : 1.0
             word_ending = 'one'             NUM : NOUN   =      3.5 : 1.0
             word_ending = 'to'              PRT : ADP    =      3.3 : 1.0
             word_ending = 'ile'             ADP : NOUN   =      3.2 : 1.0
             word_ending = 'nto'             ADP : NOUN   =      3.2 : 1.0
#+end_example

Without the 'X' tags we get much higher accuracy with the model and we can
see our most informative features.

  4. [@4] <<lda>> Continuing with the Bayesian theme of problem [[bayesian]],
     let's try some [[http://scikit-learn.org/stable/modules/generated/sklearn.discriminant_analysis.LinearDiscriminantAnalysis.html#sklearn.discriminant_analysis.LinearDiscriminantAnalysis][linear discriminant analysis]] with the algorithm found in
     ,*scikit-learn*, using the tags as the labels we want to learn.  Again, the
     question we're asking is how well do the three-letter suffixes predict
     the tags, so this is a multiclass LDA problem; the example on the man
     page shows a two-class problem.  We'll use the default =svd= method with
     no shrinkage, both because it's a good place to start and because it may
     be able to cope with the size of our tag and feature sets.  Return the
     output of the decision_function and score functions after training and
     testing the classifier.  Compute the LDA with and without downcasing and
     compare and discuss the results.

#+begin_src python :results output
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.metrics import accuracy_score
import numpy as np
import json
with open('test_features.txt', 'r') as f:
  test_features = f.read()

with open('train_features.txt', 'r') as f:
  train_features = f.read()

train_data = json.loads(train_features)
print(train_data)
test_data = json.loads(test_features)
# Function to extract features and labels
def extract_features_and_labels(data):
    suffixes = [word[-3:] for word, tag in data.items()]
    tags = [tag for word, tag in data.items()]
    return suffixes, tags

  # Extract features and labels from training and test data
train_suffixes, train_tags = extract_features_and_labels(train_data)
test_suffixes, test_tags = extract_features_and_labels(test_data)

  # Encode the features
onehot_encoder = OneHotEncoder(handle_unknown='ignore')
X_train = onehot_encoder.fit_transform(np.array(train_suffixes).reshape(-1, 1)).toarray()
X_test = onehot_encoder.transform(np.array(test_suffixes).reshape(-1, 1)).toarray()

  # Encode the labels
label_encoder = LabelEncoder()
y_train = label_encoder.fit_transform(train_tags)
y_test = label_encoder.transform(test_tags)

  # Train the LDA model
lda = LinearDiscriminantAnalysis()
lda.fit(X_train, y_train)

  # Evaluate the model
predictions = lda.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy * 100:.2f}%")


#+end_src

#+results:
: {'led': 'VERB', 'her': 'X', 'of': 'ADP', 'to': 'X', 'esh': 'NOUN', 'irs': 'NOUN', 'est': 'ADJ', 'do': 'VERB', 'the': 'DET', 'nly': 'X', 'it': 'PRON', 'ing': 'X', 'I': 'PRON', 'tes': 'NOUN', ';': '.', 'get': 'VERB', 'oth': 'X', 'hat': 'X', '!': '.', ',': '.', 'ble': 'ADJ', 'his': 'DET', 'ung': 'VERB', 'And': 'CONJ', 'een': 'X', 'son': 'NOUN', "n't": 'VERB', 'ain': 'NOUN', 'elf': 'PRON', 'red': 'X', 'a': 'DET', 'hem': 'PRON', 'ese': 'DET', 'He': 'PRON', '.': '.', 'our': 'X', 'gly': 'ADV', 'he': 'PRON', '?': '.', 'ess': 'X', 'ell': 'X', 'ial': 'NOUN', 'now': 'X', 'ied': 'VERB', 'oke': 'VERB', 'ire': 'NOUN', 'ong': 'X', 'icy': 'ADJ', 'for': 'ADP', 'but': 'CONJ', 'new': 'X', 'lin': 'NOUN', 'den': 'ADJ', 'ete': 'ADJ', 'ris': 'NOUN', 'ped': 'VERB', 'uch': 'ADJ', 'ere': 'X', 'him': 'PRON', 'nty': 'X', 'off': 'PRT', 'hen': 'ADV', 'up': 'PRT', 'ove': 'ADP', 'hey': 'PRON', 'and': 'X', 'not': 'ADV', 'ver': 'X', 'ded': 'X', 'if': 'ADP', 'ter': 'X', 'ges': 'NOUN', 'sly': 'X', 'rse': 'NOUN', 'is': 'VERB', 'aid': 'VERB', 'ink': 'ADJ', 'fer': 'VERB', 'int': 'NOUN', 'had': 'VERB', 'she': 'PRON', 'nto': 'ADP', 'ide': 'X', 'cer': 'NOUN', 'are': 'VERB', 'ime': 'NOUN', 'ves': 'NOUN', 'ust': 'X', 'ody': 'NOUN', 'on': 'X', 'in': 'ADP', 'man': 'X', 'ose': 'X', 'der': 'NOUN', 'way': 'X', 'men': 'NOUN', 'ave': 'VERB', 'Sex': 'NOUN', 'ore': 'X', 'hly': 'ADV', '``': '.', 'bor': 'NOUN', 'ark': 'ADJ', 'use': 'NOUN', 'oel': 'NOUN', 'rns': 'NOUN', 'hes': 'NOUN', 'ate': 'X', 'ith': 'ADP', 'uld': 'VERB', 'ars': 'NOUN', 'eer': 'ADJ', 'eal': 'ADJ', 'you': 'PRON', 'was': 'VERB', 'box': 'NOUN', 'elp': 'VERB', 'rch': 'NOUN', 'ect': 'NOUN', 'ery': 'X', 'as': 'ADP', 'ork': 'X', 'oat': 'NOUN', 'ton': 'NOUN', 'ear': 'X', 'any': 'DET', 'one': 'X', 'tty': 'ADV', 'ity': 'NOUN', 'ner': 'NOUN', 'eel': 'X', 'dom': 'NOUN', 'ome': 'X', 'me': 'PRON', 'ght': 'X', "t's": 'PRT', "I'm": 'PRT', 'All': 'PRT', 'pid': 'ADJ', 'ill': 'X', 'my': 'DET', 'ont': 'ADJ', 'lly': 'ADV', 'by': 'ADP', 'out': 'X', 'nds': 'NOUN', "''": '.', 'ven': 'VERB', '500': 'NOUN', 'try': 'NOUN', 'oys': 'NOUN', 'ilk': 'NOUN', 'ked': 'VERB', 'rms': 'NOUN', 'fty': 'NUM', 'guy': 'NOUN', 'ful': 'X', 'act': 'NOUN', 'But': 'CONJ', 'ole': 'ADJ', 'ile': 'X', 'can': 'ADJ', 'ons': 'NOUN', 'nse': 'NOUN', 'God': 'NOUN', 'all': 'PRT', 'ern': 'NOUN', 'ses': 'VERB', 'So': 'ADV', 'ive': 'VERB', 'ved': 'VERB', 'unk': 'ADJ', 'ary': 'ADJ', 'ale': 'NOUN', 'urd': 'ADJ', 'lds': 'NOUN', 'The': 'DET', 'ook': 'X', 'set': 'NOUN', 'ack': 'X', 'nce': 'NOUN', 'pen': 'X', 'ady': 'X', 'igh': 'ADJ', '--': '.', 'own': 'PRT', 'rks': 'VERB', 'two': 'NUM', 'ays': 'X', 'nia': 'NOUN', 'ake': 'VERB', 'ted': 'X', 'thy': 'ADJ', 'ort': 'NOUN', 'ard': 'X', 'fas': 'NOUN', 'be': 'VERB', 'end': 'NOUN', 'old': 'X', 'Let': 'VERB', 'ier': 'NOUN', 'no': 'DET', 'did': 'VERB', 'ick': 'X', 'xed': 'VERB', 'fix': 'VERB', 'tle': 'X', 'ich': 'DET', '.S.': 'NOUN', 'ler': 'NOUN', 'or': 'CONJ', 'who': 'PRON', 'She': 'PRON', 'ine': 'NOUN', 'saw': 'VERB', 'ace': 'NOUN', 'Say': 'VERB', 'oft': 'ADJ', 'sed': 'VERB', 'age': 'NOUN', 'Now': 'ADV', 'let': 'NOUN', 'ots': 'NOUN', 'ite': 'ADJ', 'rth': 'ADV', 'ead': 'NOUN', 'kin': 'VERB', 'at': 'ADP', 'ten': 'NUM', 'ump': 'ADJ', 'row': 'ADJ', 'dew': 'NOUN', 'ice': 'VERB', 'Yet': 'CONJ', 'low': 'X', 'ned': 'VERB', 'ans': 'NOUN', 'ged': 'VERB', 'ood': 'X', 'eir': 'DET', 'ulk': 'NOUN', 'ife': 'NOUN', 'lap': 'NOUN', "d's": 'NOUN', 'ign': 'NOUN', 'an': 'DET', 'ers': 'NOUN', 'we': 'PRON', 'You': 'PRON', 'J.': 'NOUN', 'ran': 'VERB', 'ple': 'X', 'ike': 'X', 'zon': 'NOUN', 'amn': 'ADJ', ':': '.', 'ops': 'VERB', 'Do': 'VERB', 'ion': 'NOUN', 'ena': 'NOUN', 'nes': 'NOUN', 'so': 'ADV', 'It': 'PRON', 'rew': 'VERB', 'how': 'ADV', 'ent': 'ADJ', 'ets': 'NOUN', 'ind': 'NOUN', 'eat': 'X', 'ote': 'VERB', 'aws': 'NOUN', 'go': 'VERB', 'dry': 'ADJ', 'sco': 'NOUN', 'rom': 'ADP', 'als': 'NOUN', 'My': 'DET', "a's": 'NOUN', 'We': 'PRON', 'iew': 'NOUN', 'tly': 'ADV', 'rts': 'NOUN', 'eys': 'NOUN', 'ait': 'VERB', "o's": 'NOUN', 'ger': 'ADJ', 'ant': 'ADJ', 'leg': 'NOUN', 'If': 'ADP', 'few': 'ADJ', 'ock': 'VERB', 'bel': 'NOUN', 'A': 'DET', 'met': 'VERB', 'ugh': 'ADP', 'lay': 'VERB', 'arm': 'NOUN', 'ken': 'VERB', 'oes': 'NOUN', 'raw': 'NOUN', 'Ma': 'NOUN', 'elt': 'VERB', 'opo': 'NOUN', 'mad': 'ADJ', 'ncy': 'NOUN', 'ato': 'NOUN', 'boy': 'NOUN', 'tel': 'NOUN', 'ors': 'NOUN', "y's": 'NOUN', 'bad': 'ADV', 'its': 'NOUN', 'urs': 'NOUN', 'iss': 'NOUN', 'ird': 'ADJ', '600': 'NUM', 'rly': 'ADV', 'dea': 'NOUN', '942': 'NUM'}
: Accuracy: 31.08%

Once again, when labeled the data with 'X's the accuracy tends to be very
low. Once again we will include code below performing the same method
without incorporating the 'X' label.

#+begin_src python :results output
from sklearn.discriminant_analysis import LinearDiscriminantAnalysis
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.metrics import accuracy_score
import numpy as np
import json
import random
from nltk.corpus import brown
words = brown.tagged_words(categories='fiction', tagset='universal')
# Random seed so we always get the same output from the random sample
random.seed(a=7740)
data_set = random.sample(list(words), 1000)
train_data = data_set[:900]
test_data = data_set[900:]

# Function to extract features and labels
def extract_features_and_labels(data):
    suffixes = [word[-3:] for word, tag in data]
    tags = [tag for word, tag in data]
    return suffixes, tags

  # Extract features and labels from training and test data
train_suffixes, train_tags = extract_features_and_labels(train_data)
test_suffixes, test_tags = extract_features_and_labels(test_data)

  # Encode the features
onehot_encoder = OneHotEncoder(handle_unknown='ignore')
X_train = onehot_encoder.fit_transform(np.array(train_suffixes).reshape(-1, 1)).toarray()
X_test = onehot_encoder.transform(np.array(test_suffixes).reshape(-1, 1)).toarray()

  # Encode the labels
label_encoder = LabelEncoder()
y_train = label_encoder.fit_transform(train_tags)
y_test = label_encoder.transform(test_tags)

  # Train the LDA model
lda = LinearDiscriminantAnalysis()
lda.fit(X_train, y_train)

  # Evaluate the model
predictions = lda.predict(X_test)
accuracy = accuracy_score(y_test, predictions)
print(f"Accuracy: {accuracy * 100:.2f}%")


#+end_src 

#+results:
: Accuracy: 65.00%

Without using the 'X' labeled data we were able to get an accuracy of 65%
with the LDA mmodel.

# rewrite to clarify:
#
# two draws w/o replacement of anchors and successors; compare
# permute
# re-draw same anchors with new successors, and then compare all four



5. [@5] <<bow>> One feature that might be helpful in distinguishing
   machine-generated texts is repetition from sentence to sentence.  Let's
   explore that hypothesis informally.  One way we can approach that
   problem by comparing significant words (that is, non-stop words) between
   each sentence and its successor sentence in a corpus.  We'll use the
   Brown corpus, category news, for this problem.  Go ahead and downcase
   unless you want to explain why you don't think it's a good idea.

    For 700 randomly selected sentences in the Brown news corpus (the
   ``first anchor sentences''), and their immediately succeeding sentences
   (''first set of successors''), form bags of the significant words for
   each pair of sentences (so really, these are paired data) and then
   compute the intersection between each pair of bags (so, 700 intersecting
   bags of words).  This is the baseline comparison.

   Tabulate these and compare the results to another randomly drawn 700
   sentences (''second anchor sentences''), ensuring that there are no
   duplicates between the first anchor sentences and the second anchor
   sentences and their successors (sampling without replacement).  Permute
   all sentences in the corpus, then draw the same second anchor sentences
   and their new successors and repeat computing the intersecting bags of
   significant words.   So you'll have three intersecting bags of
   significant words:
      + first anchor and their successors (overall baseline)
      + second anchor and their successors, ensuring that intersection of
        first and second anchors is empty (control for second anchors BOWs)
      + second anchor and new successors after permutation (the experiment).


   Compare and discuss the results.  You may use methods from NLTK,
   scikit-learn, or both for this problem: just be sure your code block is
   complete and self-contained.
#+begin_src python :results output
import nltk
from nltk.corpus import brown
from sklearn.feature_extraction.text import TfidfVectorizer  
import random
from scipy.stats import ttest_ind

# random.seed(7740)
def create_tfidf_representation(sentences):
    tfidf_vectorizer = TfidfVectorizer() 
    tfidf_representation = tfidf_vectorizer.fit_transform(sentences)
    return tfidf_representation.toarray()

def calculate_overlap(vec1, vec2):
    overlap = len(set(vec1) & set(vec2))
    return overlap

news_category_sentences = [' '.join(s) for s in brown.sents(categories='news')]
reference_sentences = random.sample(news_category_sentences, 700)
reference_tfidf = create_tfidf_representation(reference_sentences)
following_tfidf = create_tfidf_representation(reference_sentences[:-1])

comparison_length = min(len(reference_tfidf), len(following_tfidf))
baseline_overlaps = [calculate_overlap(reference_tfidf[i], following_tfidf[i]) for i in range(comparison_length)]
shuffled_news_sentences = list(news_category_sentences)
random.shuffle(shuffled_news_sentences)
experimental_sentences = random.sample(shuffled_news_sentences, 700)
experimental_sentences = [s for s in experimental_sentences if s not in reference_sentences]

experimental_tfidf = create_tfidf_representation(experimental_sentences)
shuffled_following_tfidf = create_tfidf_representation(experimental_sentences[:-1])
experiment_length = min(len(experimental_tfidf), len(shuffled_following_tfidf))
experimental_overlaps = [calculate_overlap(experimental_tfidf[i], shuffled_following_tfidf[i]) for i in range(experiment_length)]
print("Baseline Overlap Distribution:")
print(nltk.FreqDist(baseline_overlaps))
print("Experimental Overlap Distribution:")
print(nltk.FreqDist(experimental_overlaps))
baseline_overlaps = baseline_overlaps[:experiment_length]
experimental_overlaps = experimental_overlaps[:experiment_length]
t_statistic, p_val = ttest_ind(baseline_overlaps, experimental_overlaps)
print(f"T-Statistic: {t_statistic}, P-Value: {p_val}")

#+end_src

#+results:
: Baseline Overlap Distribution:
: <FreqDist with 2 samples and 699 outcomes>
: Experimental Overlap Distribution:
: <FreqDist with 2 samples and 603 outcomes>
: T-Statistic: 0.0, P-Value: 1.0

6.  [@6] <<ml>> Choose 500 random sentences from the Brown news corpus
   tagged with the universal tagset.  For each sentence, identify the nouns
   and then compile a list of the three tags immediately preceeding each
   noun (excluding chunks smaller than three).  Then encode each chunk in
   the list as a ternary tuple, mapping the tags to integers, and save the
   list of mapped tuples to disk using either pickle or json, as you wish.
   Go ahead and downcase unless you want to explain why you don't think
   it's a good idea.


    Now cluster your saved encodings using the [[http://scikit-learn.org/stable/modules/generated/sklearn.cluster.MeanShift.html#sklearn.cluster.MeanShift][MeanShift]] and
    [[http://scikit-learn.org/stable/modules/generated/sklearn.cluster.AgglomerativeClustering.html#sklearn.cluster.AgglomerativeClustering][AgglomerativeClustering]] algorithms from scikit-learn. For MeanShift,
    take all the defaults; you may run it in parallel if you like and can.
    Run AgglomerativeClustering thrice: first using "ward" for the linkage
    (it will only use a Euclidean metric); and then "average" for the
    linkage and "manhattan" and "cosine" for the metric.  Discuss the
    differences you find in the results of the different trials, using any
    plots you find helpful.

    
#+begin_src python :results output
import nltk
from nltk.corpus import brown
import json
from collections import deque
import random
nltk.download('brown')
nltk.download('universal_tagset')

# Assuming we have a function that returns a random sentence from the Brown Corpus
def get_random_sentences(corpus, num=500):
    return [corpus.sents()[i] for i in random.sample(range(len(corpus.sents())), num)]

# Function to map tags to integers
tag_to_int = {'ADJ': 0, 'ADP': 1, 'ADV': 2, 'CONJ': 3, 'DET': 4, 'NOUN': 5, 'NUM': 6, 'PRT': 7, 'PRON': 8, 'VERB': 9, 'X': 10, '.': 11}

# Function to get the three tags preceding each noun
def get_preceding_tags(sentence):
    tagged_sentence = nltk.pos_tag(sentence, tagset='universal')
    preceding_tags = []
    # We'll use a deque to efficiently keep track of the last three tags
    tag_window = deque(maxlen=3)

    for word, tag in tagged_sentence:
        if len(tag_window) == 3:  # Ensure we have a window of 3 tags before checking for a noun
            if tag == 'NOUN':
                preceding_tags.append(tuple(tag_window))
        tag_window.append(tag)

    return preceding_tags

# Convert the tag triples to integers
def encode_tags_as_integers(tag_triples):
    return [(tag_to_int[tag1], tag_to_int[tag2], tag_to_int[tag3]) for (tag1, tag2, tag3) in tag_triples]

# Now we get 500 random sentences
random_sentences = get_random_sentences(brown, 500)

# Initialize our final list of encoded tuples
encoded_tuples_list = []

for sentence in random_sentences:
    # Get preceding tags for each noun in the sentence
    preceding_tags = get_preceding_tags(sentence)
    # Encode the tag triples as integers
    encoded_tuples = encode_tags_as_integers(preceding_tags)
    # Add the encoded tuples to our list
    encoded_tuples_list.extend(encoded_tuples)

# Serialize the list to disk using JSON
with open('encoded_tuples.json', 'w') as file:
    json.dump(encoded_tuples_list, file)

#+end_src

#+results:


#+begin_src python :results output
from sklearn.cluster import AgglomerativeClustering
from sklearn.cluster import MeanShift
from sklearn.metrics.pairwise import cosine_similarity
import json
import numpy
with open('encoded_tuples.json') as f:
  data = f.read()

X = json.loads(data)
print(X)

ms_clustering = MeanShift().fit_predict(X)
print('MeanShift: ', ms_clustering)
numpy.savetxt("meanshift.txt", ms_clustering, fmt="%d")
agg_clust_ward = AgglomerativeClustering().fit_predict(X)
print('Ward: ', agg_clust_ward)
numpy.savetxt("ward.txt", agg_clust_ward, fmt="%d")
# Compute the cosine similarity matrix
cosine_sim_matrix = cosine_similarity(X)

# Agglomerative Clustering using the precomputed cosine similarity matrix
agg_clust_avg_cosine = AgglomerativeClustering(linkage='average', affinity='precomputed')
agg_avg_cosine_labels = agg_clust_avg_cosine.fit_predict(cosine_sim_matrix)
print('Cosine: ', agg_avg_cosine_labels)
numpy.savetxt("cosine.txt", agg_avg_cosine_labels, fmt="%d")
agg_clust_avg_man = AgglomerativeClustering(linkage='average', metric='manhattan').fit_predict(X)
print('Manhattan: ', agg_clust_avg_man)
numpy.savetxt("manhattan.txt", agg_clust_avg_man, fmt="%d")
#+end_src

#+results:
: [[4, 0, 5], [1, 4, 6], [9, 1, 4], [4, 5, 1], [1, 0, 0], [5, 3, 4], [1, 4, 0], [0, 5, 6], [5, 1, 0], [1, 0, 5], [5, 5, 1], [5, 1, 5], [5, 1, 4], [9, 9, 4], [5, 1, 4], [5, 7, 4], [7, 4, 5], [5, 5, 1], [9, 8, 0], [8, 0, 5], [5, 1, 4], [4, 5, 1], [5, 1, 0], [5, 9, 4], [5, 1, 4], [4, 5, 4], [4, 0, 1], [2, 9, 9], [2, 2, 9], [9, 1, 4], [1, 4, 0], [5, 9, 8], [5, 1, 8], [1, 8, 5], [1, 4, 0], [9, 4, 0], [7, 1, 4], [4, 5, 1], [5, 1, 5], [9, 4, 0], [0, 1, 4], [5, 1, 8], [11, 1, 4], [1, 4, 5], [5, 9, 9], [9, 9, 5], [5, 5, 11], [11, 5, 9], [5, 3, 6], [9, 1, 9], [1, 9, 5], [5, 5, 1], [1, 5, 0], [9, 9, 4], [9, 4, 5], [5, 1, 0], [1, 0, 5], [5, 3, 0], [6, 6, 0], [9, 11, 3], [2, 2, 1], [1, 4, 0], [9, 4, 0], [4, 0, 5], [8, 9, 7], [6, 1, 4], [4, 5, 1], [2, 4, 0], [2, 1, 4], [11, 8, 9], [8, 9, 5], [9, 5, 5], [5, 1, 4], [4, 0, 0], [5, 11, 4], [5, 11, 1], [11, 1, 5], [1, 4, 0], [8, 9, 9], [1, 8, 3], [3, 5, 4], [5, 4, 5], [0, 11, 9], [11, 6, 0], [6, 9, 4], [9, 4, 5], [0, 4, 9], [4, 5, 0], [0, 5, 1], [5, 1, 4], [4, 5, 3], [1, 4, 2], [2, 5, 1], [1, 4, 0], [2, 9, 4], [5, 1, 4], [2, 1, 8], [0, 11, 3], [11, 3, 5], [4, 9, 0], [5, 1, 4], [0, 1, 8], [9, 11, 4], [11, 4, 5], [4, 5, 5], [7, 9, 4], [1, 8, 0], [7, 4, 0], [5, 1, 4], [1, 4, 5], [9, 4, 0], [5, 1, 4], [9, 4, 0], [4, 0, 5], [5, 5, 11], [5, 11, 5], [5, 5, 11], [9, 4, 11], [11, 5, 11], [8, 4, 0], [3, 4, 0], [0, 5, 1], [5, 1, 5], [5, 5, 1], [9, 9, 2], [9, 2, 5], [2, 9, 4], [5, 1, 0], [0, 5, 3], [5, 1, 0], [0, 5, 1], [2, 2, 0], [5, 11, 2], [9, 11, 4], [4, 5, 1], [1, 0, 6], [5, 1, 4], [4, 11, 1], [11, 1, 5], [1, 5, 5], [5, 5, 5], [2, 2, 4], [2, 4, 5], [4, 5, 5], [9, 2, 1], [1, 4, 1], [3, 0, 0], [0, 7, 9], [1, 8, 0], [9, 4, 0], [5, 1, 4], [5, 9, 4], [9, 4, 0], [5, 11, 11], [6, 11, 4], [9, 9, 1], [9, 4, 0], [0, 5, 3], [5, 3, 5], [3, 5, 5], [11, 4, 9], [11, 9, 4], [9, 4, 5], [8, 1, 4], [9, 7, 4], [1, 4, 11], [11, 5, 11], [11, 5, 1], [1, 1, 4], [4, 5, 1], [6, 9, 4], [4, 5, 1], [3, 6, 4], [6, 4, 5], [9, 4, 0], [0, 5, 1], [5, 9, 1], [9, 1, 5], [5, 5, 3], [5, 3, 5], [5, 9, 1], [9, 1, 5], [9, 4, 0], [9, 4, 9], [5, 1, 6], [6, 5, 1], [5, 1, 5], [1, 4, 0], [11, 6, 1], [1, 5, 1], [1, 5, 3], [11, 6, 1], [1, 0, 0], [3, 6, 1], [1, 5, 1], [5, 1, 5], [5, 5, 9], [5, 1, 8], [1, 4, 0], [4, 0, 5], [5, 4, 9], [9, 5, 1], [9, 9, 4], [9, 4, 5], [5, 1, 4], [4, 5, 7], [7, 5, 4], [5, 1, 0], [5, 1, 4], [5, 5, 1], [5, 9, 4], [4, 5, 1], [9, 9, 1], [1, 8, 0], [0, 5, 11], [5, 1, 8], [9, 1, 4], [9, 4, 2], [5, 11, 4], [4, 9, 6], [5, 1, 4], [5, 1, 4], [0, 1, 4], [1, 4, 5], [3, 0, 4], [9, 8, 3], [5, 1, 4], [5, 2, 4], [9, 1, 4], [1, 4, 5], [0, 1, 0], [7, 1, 4], [5, 1, 0], [11, 4, 0], [5, 1, 4], [1, 4, 5], [9, 11, 4], [0, 5, 1], [2, 0, 4], [4, 5, 1], [11, 3, 1], [4, 2, 0], [2, 1, 4], [4, 5, 1], [2, 2, 9], [9, 5, 1], [11, 0, 11], [5, 1, 4], [1, 4, 0], [5, 1, 4], [1, 4, 0], [3, 9, 8], [5, 9, 1], [9, 1, 5], [2, 8, 0], [0, 5, 1], [5, 3, 9], [5, 9, 4], [1, 4, 9], [5, 1, 4], [5, 1, 8], [5, 9, 4], [5, 1, 4], [5, 1, 4], [7, 9, 4], [4, 5, 1], [9, 1, 0], [11, 1, 4], [1, 4, 5], [2, 11, 1], [11, 1, 5], [9, 1, 4], [4, 0, 0], [1, 4, 0], [2, 1, 4], [5, 1, 8], [1, 8, 5], [5, 5, 1], [5, 1, 5], [9, 4, 0], [0, 5, 1], [5, 1, 4], [5, 1, 4], [4, 5, 1], [5, 1, 5], [1, 5, 5], [5, 5, 1], [8, 9, 1], [9, 4, 0], [0, 5, 1], [5, 3, 0], [9, 1, 4], [5, 1, 4], [9, 7, 4], [5, 1, 4], [4, 5, 1], [5, 1, 4], [5, 11, 4], [11, 4, 5], [8, 9, 4], [5, 1, 4], [5, 1, 4], [4, 0, 1], [2, 2, 1], [2, 1, 5], [9, 4, 9], [5, 7, 4], [4, 5, 1], [3, 9, 1], [9, 1, 4], [9, 4, 0], [11, 11, 9], [7, 8, 0], [5, 5, 11], [5, 11, 5], [11, 5, 5], [1, 4, 0], [5, 1, 4], [1, 4, 5], [5, 3, 9], [1, 0, 0], [1, 4, 0], [0, 1, 0], [11, 6, 4], [9, 1, 4], [1, 4, 5], [4, 5, 5], [5, 5, 1], [5, 11, 1], [1, 5, 1], [0, 3, 0], [3, 0, 5], [5, 7, 0], [5, 1, 4], [5, 11, 9], [1, 1, 0], [0, 5, 4], [1, 8, 9], [5, 1, 4], [4, 5, 3], [1, 4, 0], [9, 1, 8], [5, 1, 4], [0, 8, 9], [5, 11, 4], [5, 1, 4], [2, 1, 4], [5, 2, 11], [11, 5, 11], [5, 11, 3], [3, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [5, 11, 5], [11, 9, 9], [9, 9, 5], [5, 5, 1], [1, 5, 1], [11, 9, 8], [8, 1, 4], [1, 4, 5], [9, 9, 9], [1, 4, 9], [9, 5, 1], [5, 11, 0], [5, 9, 6], [5, 1, 6], [3, 4, 9], [5, 1, 4], [5, 2, 4], [3, 1, 4], [1, 4, 5], [5, 9, 1], [5, 9, 1], [9, 9, 4], [4, 5, 1], [5, 1, 5], [1, 5, 5], [7, 8, 11], [8, 11, 5], [8, 1, 4], [1, 4, 0], [4, 5, 6], [11, 1, 6], [9, 4, 0], [4, 0, 5], [5, 5, 1], [1, 5, 11], [11, 5, 11], [11, 1, 4], [8, 9, 4], [5, 9, 8], [9, 8, 4], [9, 4, 0], [4, 0, 5], [4, 8, 0], [8, 1, 4], [1, 9, 4], [9, 1, 4], [4, 5, 3], [5, 1, 4], [5, 1, 8], [1, 8, 9], [1, 4, 11], [11, 5, 1], [9, 11, 9], [5, 9, 1], [9, 8, 9], [5, 1, 8], [2, 7, 4], [5, 1, 4], [11, 2, 1], [9, 4, 0], [9, 1, 4], [4, 5, 1], [1, 5, 1], [9, 1, 4], [1, 4, 5], [8, 9, 4], [11, 1, 4], [3, 1, 4], [4, 5, 7], [5, 7, 5], [5, 5, 8], [3, 4, 8], [9, 8, 0], [8, 1, 4], [1, 4, 5], [4, 5, 5], [8, 9, 9], [9, 5, 3], [8, 4, 0], [4, 7, 9], [11, 1, 4], [5, 1, 4], [2, 1, 4], [5, 1, 8], [8, 5, 9], [9, 9, 7], [4, 0, 0], [11, 3, 9], [9, 5, 1], [1, 5, 11], [11, 5, 1], [11, 3, 0], [8, 9, 4], [9, 4, 5], [9, 4, 0], [5, 1, 4], [2, 9, 0], [3, 4, 0], [5, 1, 4], [4, 5, 3], [5, 3, 5], [5, 11, 4], [9, 1, 0], [6, 1, 4], [0, 1, 4], [8, 3, 8], [1, 1, 4], [4, 5, 1], [4, 0, 1], [2, 1, 4], [5, 9, 5], [9, 8, 0], [0, 5, 11], [11, 5, 3], [5, 5, 3], [5, 3, 5], [11, 1, 0], [0, 5, 11], [5, 11, 1], [1, 5, 1], [1, 4, 0], [4, 0, 5], [5, 9, 4], [3, 9, 4], [5, 1, 4], [4, 5, 11], [5, 11, 3], [11, 3, 5], [1, 4, 6], [4, 6, 5], [6, 5, 5], [5, 5, 5], [5, 5, 11], [11, 5, 6], [5, 6, 5], [6, 5, 5], [11, 11, 9], [9, 4, 0], [0, 5, 1], [1, 5, 3], [5, 3, 5], [5, 7, 11], [7, 11, 5], [11, 11, 0], [11, 0, 5], [2, 9, 1], [9, 1, 5], [1, 9, 4], [5, 1, 5], [1, 5, 5], [5, 11, 0], [5, 1, 4], [1, 4, 5], [4, 5, 5], [9, 1, 4], [1, 4, 1], [5, 0, 2], [2, 5, 1], [1, 5, 11], [5, 11, 5], [8, 9, 9], [9, 5, 1], [5, 1, 5], [1, 8, 0], [5, 9, 1], [2, 7, 4], [9, 4, 4], [5, 7, 4], [9, 2, 4], [5, 1, 8], [4, 2, 0], [5, 1, 4], [1, 4, 5], [1, 4, 0], [5, 1, 4], [9, 2, 0], [7, 9, 1], [9, 1, 4], [4, 5, 1], [9, 1, 4], [4, 5, 1], [1, 5, 3], [8, 9, 1], [1, 4, 1], [1, 5, 0], [5, 11, 2], [5, 9, 4], [5, 1, 4], [9, 2, 1], [2, 1, 5], [8, 9, 1], [1, 4, 8], [9, 1, 4], [4, 5, 1], [11, 4, 6], [0, 1, 4], [1, 4, 5], [7, 9, 1], [5, 1, 0], [0, 5, 1], [1, 5, 7], [5, 11, 9], [7, 4, 0], [5, 1, 4], [9, 0, 7], [7, 4, 0], [5, 1, 4], [1, 4, 0], [5, 11, 9], [2, 9, 1], [9, 7, 4], [1, 4, 0], [5, 5, 5], [11, 4, 0], [3, 4, 0], [5, 1, 4], [1, 4, 5], [11, 9, 0], [5, 1, 4], [4, 5, 3], [5, 1, 4], [1, 4, 5], [4, 5, 5], [9, 7, 11], [7, 11, 5], [5, 9, 3], [9, 3, 5], [5, 5, 9], [5, 9, 5], [0, 1, 9], [1, 4, 0], [11, 4, 0], [4, 2, 0], [4, 9, 1], [1, 4, 0], [11, 9, 9], [3, 4, 9], [5, 7, 9], [1, 4, 5], [4, 5, 5], [5, 1, 4], [9, 4, 0], [4, 0, 5], [0, 5, 5], [1, 6, 0], [5, 3, 4], [3, 4, 5], [1, 6, 0], [4, 4, 6], [5, 1, 1], [8, 9, 4], [4, 5, 11], [2, 1, 4], [5, 11, 4], [9, 1, 4], [0, 3, 4], [5, 1, 8], [9, 1, 4], [9, 9, 7], [4, 5, 3], [0, 1, 4], [9, 1, 6], [9, 8, 0], [4, 9, 4], [11, 9, 4], [9, 4, 0], [9, 7, 4], [11, 9, 4], [9, 1, 4], [1, 4, 0], [4, 0, 5], [2, 0, 7], [0, 7, 5], [7, 5, 5], [1, 3, 4], [4, 5, 1], [5, 3, 4], [3, 4, 5], [4, 5, 7], [9, 8, 4], [5, 7, 4], [9, 0, 1], [8, 9, 8], [5, 2, 4], [11, 4, 0], [3, 6, 9], [3, 4, 0], [4, 5, 0], [5, 3, 4], [3, 4, 5], [0, 1, 4], [0, 3, 0], [5, 9, 4], [4, 5, 3], [9, 1, 8], [5, 1, 0], [9, 1, 4], [1, 4, 5], [5, 5, 3], [1, 8, 0], [0, 5, 11], [9, 1, 4], [9, 1, 4], [4, 5, 1], [5, 1, 5], [5, 11, 3], [3, 5, 1], [5, 1, 4], [1, 11, 3], [1, 9, 0], [9, 2, 1], [3, 1, 4], [4, 9, 4], [9, 4, 5], [5, 5, 7], [5, 7, 5], [7, 5, 5], [5, 5, 5], [9, 1, 1], [9, 7, 4], [7, 4, 5], [8, 9, 4], [1, 1, 4], [1, 4, 5], [5, 9, 7], [7, 5, 3], [5, 1, 4], [1, 4, 5], [5, 9, 1], [9, 1, 5], [0, 1, 4], [5, 9, 4], [1, 9, 4], [4, 5, 1], [5, 1, 0], [8, 1, 9], [9, 5, 11], [9, 1, 8], [9, 1, 4], [7, 9, 4], [11, 1, 6], [6, 0, 6], [5, 11, 4], [7, 9, 8], [8, 4, 0], [5, 1, 4], [5, 1, 4], [4, 9, 9], [7, 9, 4], [9, 4, 5], [5, 1, 4], [1, 4, 5], [5, 1, 8], [4, 4, 0], [2, 7, 4], [4, 5, 1], [7, 9, 4], [5, 9, 4], [5, 1, 4], [8, 9, 1], [1, 4, 0], [9, 0, 1], [5, 1, 4], [4, 5, 9], [1, 4, 0], [9, 1, 4], [1, 4, 5], [5, 1, 4], [4, 9, 4], [5, 1, 0], [0, 5, 1], [5, 1, 5], [2, 1, 11], [5, 11, 0], [5, 1, 0], [0, 5, 1], [1, 5, 3], [1, 4, 0], [9, 9, 4], [5, 1, 4], [11, 6, 11], [11, 5, 11], [11, 5, 11], [11, 5, 3], [5, 1, 0], [11, 3, 1], [5, 1, 0], [0, 5, 3], [1, 5, 5], [5, 5, 5], [5, 5, 5], [5, 5, 4], [5, 4, 5], [5, 9, 4], [4, 5, 0], [0, 5, 7], [5, 9, 9], [9, 4, 0], [9, 11, 11], [2, 11, 4], [11, 4, 5], [1, 4, 0], [9, 9, 8], [9, 8, 5], [9, 2, 4], [9, 9, 8], [9, 8, 5], [11, 1, 4], [1, 4, 5], [5, 5, 1], [5, 7, 4], [7, 4, 5], [5, 5, 1], [8, 9, 4], [3, 1, 4], [5, 1, 4], [1, 4, 5], [5, 5, 4], [1, 0, 4], [5, 1, 1], [9, 6, 4], [5, 9, 0], [5, 9, 8], [4, 9, 5], [11, 3, 6], [6, 5, 11], [9, 2, 4], [2, 4, 6], [5, 9, 8], [9, 11, 9], [5, 1, 8], [1, 1, 4], [5, 9, 4], [1, 4, 0], [9, 9, 4], [5, 1, 8], [9, 8, 0], [9, 8, 9], [6, 11, 4], [9, 1, 9], [1, 9, 5], [5, 7, 4], [7, 4, 5], [0, 1, 8], [2, 7, 9], [9, 4, 9], [1, 4, 0], [4, 0, 5], [9, 4, 0], [0, 5, 1], [5, 1, 5], [11, 9, 9], [7, 9, 4], [5, 1, 8], [8, 5, 11], [1, 7, 9], [7, 9, 5], [5, 1, 4], [9, 1, 4], [5, 1, 4], [1, 4, 5], [11, 1, 9], [1, 4, 0], [1, 4, 11], [9, 1, 4], [9, 7, 4], [7, 4, 5], [5, 11, 4], [11, 4, 5], [4, 5, 5], [5, 9, 4], [1, 6, 0], [0, 5, 1], [5, 1, 5], [4, 0, 6], [9, 7, 8], [7, 8, 5], [3, 9, 8], [9, 8, 5], [9, 7, 4], [7, 4, 5], [5, 1, 5], [5, 5, 11], [5, 3, 0], [0, 5, 3], [9, 9, 1], [5, 6, 7], [2, 9, 4], [5, 1, 0], [9, 7, 1], [4, 0, 0], [5, 1, 4], [5, 1, 8], [5, 3, 8], [5, 9, 4], [5, 11, 0], [9, 1, 4], [4, 5, 11], [5, 9, 1], [9, 1, 5], [11, 1, 4], [1, 4, 0], [11, 4, 0], [0, 5, 1], [8, 1, 4], [3, 4, 0], [4, 0, 5], [9, 7, 4], [9, 4, 0], [5, 1, 4], [3, 1, 4], [7, 9, 0], [11, 0, 11], [11, 5, 3], [5, 3, 5], [9, 4, 0], [0, 5, 1], [1, 5, 3], [1, 4, 4], [4, 4, 5], [5, 3, 0], [8, 9, 0], [5, 1, 0], [0, 5, 9], [5, 9, 5], [9, 5, 5], [5, 5, 11], [5, 11, 5], [11, 5, 5], [5, 5, 11], [5, 11, 5], [11, 5, 5], [5, 5, 11], [5, 11, 5], [11, 5, 5], [11, 0, 5], [3, 9, 4], [4, 0, 0], [5, 9, 4], [4, 5, 0], [0, 5, 1], [4, 1, 4], [9, 4, 0], [5, 1, 0], [5, 9, 1], [1, 5, 9], [1, 4, 0], [8, 0, 7], [1, 8, 0], [11, 8, 9], [9, 9, 4], [9, 4, 5], [5, 5, 1], [4, 0, 5], [0, 5, 5], [5, 11, 4], [4, 5, 8], [0, 7, 0], [0, 5, 1], [2, 0, 0], [9, 1, 0], [0, 5, 3], [5, 9, 1], [5, 1, 4], [1, 4, 0], [5, 1, 4], [1, 1, 4], [4, 5, 1], [4, 9, 4], [5, 7, 4], [5, 1, 11], [1, 11, 5], [4, 9, 4], [9, 11, 4], [9, 9, 1], [9, 1, 5], [9, 9, 3], [9, 5, 1], [1, 4, 0], [5, 1, 4], [4, 5, 1], [11, 9, 4], [9, 4, 5], [5, 1, 6], [1, 6, 5], [9, 0, 11], [0, 11, 5], [5, 9, 4], [11, 1, 4], [4, 5, 0], [1, 4, 0], [0, 5, 1], [11, 3, 4], [9, 4, 0], [5, 1, 4], [1, 4, 0], [0, 5, 11], [5, 11, 5], [8, 9, 4], [9, 4, 5], [9, 4, 0], [11, 11, 0], [7, 4, 0], [9, 1, 4], [9, 9, 4], [4, 5, 1], [11, 2, 2], [5, 1, 4], [9, 4, 0], [3, 1, 4], [3, 4, 0], [5, 1, 4], [5, 9, 4], [1, 4, 0], [5, 11, 4], [9, 9, 1], [9, 1, 5], [1, 4, 0], [0, 5, 3], [7, 9, 11], [8, 9, 4], [5, 9, 6], [9, 6, 5], [8, 9, 7], [9, 1, 4], [5, 7, 9], [9, 5, 1], [5, 9, 1], [1, 5, 3], [11, 3, 4], [9, 7, 4], [3, 2, 4], [8, 1, 4], [5, 1, 4], [1, 4, 5], [8, 9, 4], [9, 1, 4], [2, 1, 6], [4, 5, 5], [5, 9, 11], [9, 11, 5], [6, 2, 9], [9, 11, 9], [11, 9, 5], [5, 5, 11], [11, 5, 11], [5, 11, 5], [11, 5, 5], [5, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [5, 11, 5], [5, 5, 11], [11, 5, 11], [11, 5, 11], [11, 5, 11], [5, 11, 3], [8, 9, 4], [9, 9, 8], [5, 1, 4], [3, 1, 0], [5, 4, 0], [0, 5, 1], [9, 1, 4], [11, 9, 0], [11, 3, 4], [0, 3, 0], [5, 1, 4], [4, 0, 11], [9, 0, 1], [0, 5, 7], [5, 7, 5], [5, 5, 1], [5, 11, 3], [2, 2, 11], [2, 11, 5], [9, 2, 0], [7, 8, 0], [5, 1, 4], [5, 1, 0], [11, 1, 0], [1, 0, 5], [9, 8, 0], [11, 1, 4], [1, 4, 5], [0, 3, 0], [11, 11, 4], [8, 9, 4], [9, 4, 5], [4, 5, 5], [5, 7, 8], [1, 4, 0], [7, 11, 11], [11, 5, 1], [4, 5, 1], [5, 1, 5], [2, 1, 4], [5, 11, 3], [9, 1, 8], [8, 4, 1], [1, 5, 1], [5, 1, 5], [1, 5, 5], [5, 5, 5], [5, 5, 5], [5, 5, 5], [11, 9, 1], [1, 5, 2], [5, 9, 4], [9, 7, 1], [7, 1, 5], [11, 9, 11], [5, 11, 11], [9, 11, 8], [5, 5, 3], [5, 3, 5], [3, 5, 5], [5, 5, 1], [5, 1, 5], [4, 5, 9], [5, 11, 4], [1, 4, 0], [5, 1, 4], [4, 5, 1], [1, 4, 0], [4, 0, 5], [0, 5, 5], [2, 9, 4], [4, 5, 1], [9, 4, 0], [9, 1, 4], [9, 4, 0], [0, 11, 0], [5, 1, 4], [2, 1, 8], [5, 1, 4], [5, 1, 4], [9, 1, 1], [1, 5, 3], [9, 9, 7], [9, 7, 5], [5, 5, 3], [7, 9, 8], [5, 1, 4], [4, 0, 0], [0, 3, 9], [9, 4, 0], [5, 1, 4], [1, 4, 0], [5, 1, 0], [9, 9, 4], [4, 5, 3], [3, 5, 9], [5, 9, 5], [4, 9, 4], [4, 2, 0], [0, 5, 1], [5, 1, 5], [9, 4, 0], [1, 4, 0], [5, 1, 4], [11, 2, 4], [4, 9, 4], [7, 9, 8], [8, 5, 1], [1, 5, 3], [3, 5, 1], [8, 9, 4], [5, 1, 0], [5, 11, 3], [1, 4, 0], [4, 9, 4], [4, 5, 1], [1, 4, 0], [4, 2, 0], [11, 1, 4], [11, 11, 9], [11, 9, 5], [11, 9, 8], [1, 4, 9], [11, 11, 8], [11, 8, 5], [5, 9, 0], [9, 7, 4], [5, 1, 8], [4, 0, 1], [9, 9, 0], [5, 1, 4], [9, 7, 0], [9, 9, 4], [5, 1, 2], [9, 11, 3], [5, 7, 8], [7, 8, 5], [0, 8, 9], [5, 11, 0], [0, 5, 1], [5, 3, 4], [3, 4, 5], [1, 4, 0], [5, 1, 0], [9, 4, 0], [0, 3, 0], [4, 5, 5], [9, 4, 9], [5, 1, 4], [1, 4, 5], [4, 5, 5], [11, 9, 3], [11, 3, 9], [9, 4, 0], [9, 7, 4], [9, 1, 8], [8, 9, 8], [0, 7, 9], [8, 2, 0], [8, 4, 0], [8, 9, 4], [5, 1, 9], [1, 9, 5], [3, 1, 4], [1, 4, 5], [9, 4, 0], [9, 2, 4], [4, 5, 1], [1, 5, 3], [0, 11, 0], [9, 9, 8], [2, 1, 4], [5, 1, 0], [9, 8, 1], [4, 9, 4], [4, 6, 0], [3, 9, 4], [4, 1, 4], [9, 4, 0], [4, 0, 5], [6, 6, 6], [5, 2, 0], [11, 5, 11], [9, 1, 4], [4, 5, 1], [8, 9, 4], [7, 9, 8], [8, 5, 1], [5, 9, 4], [5, 1, 4], [9, 4, 0], [1, 4, 0], [5, 1, 4], [1, 4, 5], [4, 5, 5], [5, 5, 5], [5, 11, 1], [6, 11, 1], [5, 1, 4], [1, 4, 0], [4, 0, 5], [5, 7, 4], [4, 9, 4], [5, 8, 0], [0, 5, 1], [11, 1, 6], [6, 5, 1], [11, 4, 11], [8, 9, 8], [9, 8, 5], [9, 7, 4], [2, 1, 4], [5, 1, 4], [8, 9, 8], [8, 9, 4], [5, 1, 4], [0, 11, 0], [11, 0, 5], [8, 9, 5], [5, 5, 0], [5, 1, 4], [1, 4, 5], [11, 3, 4], [9, 7, 4], [5, 1, 0], [4, 5, 1], [9, 4, 0], [0, 5, 1], [9, 0, 7], [1, 4, 0], [0, 5, 1], [1, 5, 11], [5, 11, 3], [3, 4, 6], [4, 6, 1], [4, 6, 1], [7, 1, 4], [1, 4, 0], [2, 9, 1], [2, 0, 1], [1, 5, 11], [5, 11, 5], [4, 2, 0], [1, 4, 9], [2, 2, 0], [8, 9, 4], [4, 5, 1], [8, 9, 0], [9, 0, 1], [9, 3, 0], [1, 4, 0], [4, 0, 5], [0, 5, 5], [7, 9, 4], [4, 5, 1], [5, 5, 3], [0, 3, 0], [0, 11, 4], [4, 5, 1], [5, 1, 5], [8, 9, 1], [9, 9, 4], [5, 1, 4], [9, 1, 0], [5, 11, 3], [9, 8, 0], [3, 2, 0], [5, 9, 9], [9, 1, 4], [4, 5, 11], [1, 4, 0], [9, 1, 4], [11, 11, 9], [4, 5, 5], [5, 5, 5], [5, 5, 5], [5, 9, 1], [9, 1, 5], [5, 1, 4], [2, 1, 4], [5, 9, 0], [2, 2, 4], [9, 1, 4], [4, 5, 0], [9, 4, 0], [1, 1, 8], [1, 8, 5], [9, 1, 4], [9, 1, 4], [5, 9, 6], [11, 6, 0], [6, 0, 5], [5, 6, 0], [1, 4, 0], [9, 7, 4], [5, 9, 0], [5, 11, 4], [8, 9, 0], [0, 4, 0], [6, 8, 9], [5, 7, 9], [7, 9, 5], [2, 2, 4], [7, 4, 0], [0, 5, 1], [7, 9, 4], [6, 3, 6], [5, 2, 1], [9, 4, 0], [5, 1, 9], [9, 2, 0], [0, 5, 1], [1, 8, 4], [1, 4, 0], [4, 0, 5], [1, 4, 0], [5, 1, 0], [1, 0, 5], [5, 5, 3], [5, 3, 5], [3, 5, 5], [1, 4, 0], [2, 4, 0], [9, 1, 4], [1, 1, 4], [1, 4, 0], [0, 11, 4], [5, 1, 4], [1, 0, 0], [0, 0, 5], [2, 9, 8], [5, 7, 0], [7, 0, 5], [2, 7, 4], [4, 5, 11], [11, 5, 3], [1, 0, 0], [5, 5, 1], [9, 9, 1], [5, 11, 3], [3, 5, 9], [5, 9, 5], [9, 5, 5], [5, 5, 1], [1, 5, 11], [5, 11, 5], [11, 5, 5], [5, 5, 5], [5, 5, 1], [1, 5, 11], [5, 11, 3], [11, 3, 5], [3, 5, 5], [5, 5, 5], [5, 5, 1], [1, 5, 11], [9, 7, 0], [3, 1, 4], [8, 9, 6], [6, 5, 11], [11, 0, 0], [0, 0, 5], [5, 11, 9], [9, 5, 1], [9, 7, 4], [11, 0, 1], [2, 7, 8], [7, 8, 5], [9, 7, 4], [7, 4, 5], [7, 9, 4], [4, 5, 1], [9, 2, 4], [4, 0, 0], [0, 5, 1], [1, 5, 1], [9, 4, 0], [5, 11, 4], [9, 1, 4], [5, 1, 0], [1, 0, 5], [6, 1, 4], [4, 5, 1], [5, 1, 5], [9, 9, 9], [5, 3, 9], [9, 5, 1], [8, 9, 9], [4, 2, 0], [4, 2, 0], [0, 11, 0], [11, 0, 5], [5, 11, 1], [5, 1, 0], [9, 4, 9], [1, 2, 4], [5, 1, 0], [5, 5, 9], [5, 1, 4], [4, 5, 1], [1, 5, 3], [5, 3, 5], [3, 9, 4], [5, 1, 4], [0, 7, 4], [4, 5, 1], [1, 4, 0], [2, 1, 0], [5, 1, 4], [1, 4, 5], [5, 1, 0], [1, 0, 5], [6, 11, 4], [5, 3, 4], [3, 4, 5], [4, 5, 5], [9, 9, 1], [1, 5, 1], [9, 2, 4], [4, 5, 1], [1, 5, 1], [5, 3, 0], [5, 11, 4], [11, 4, 5], [3, 4, 0], [4, 0, 1], [1, 4, 0], [8, 9, 8], [8, 5, 2], [8, 9, 8], [5, 11, 0], [11, 0, 5], [5, 1, 4], [1, 4, 5], [5, 1, 4], [5, 11, 4], [4, 1, 4], [5, 11, 0], [1, 1, 0], [8, 9, 4], [3, 4, 0], [5, 1, 4], [2, 4, 0], [2, 1, 4], [1, 4, 0], [1, 4, 6], [4, 6, 5], [1, 4, 0], [9, 4, 4], [5, 11, 4], [11, 4, 5], [11, 3, 1], [5, 11, 4], [11, 4, 5], [3, 6, 0], [6, 0, 5], [0, 5, 5], [5, 5, 9], [5, 1, 8], [7, 9, 1], [1, 8, 11], [1, 1, 4], [9, 9, 1], [9, 1, 5], [5, 5, 1], [5, 4, 0], [9, 9, 1], [1, 4, 9], [9, 2, 0], [1, 0, 0], [0, 5, 1], [5, 1, 5], [5, 1, 4], [5, 1, 4], [1, 4, 5], [4, 5, 5], [0, 11, 0], [0, 5, 1], [1, 5, 3], [1, 0, 0], [1, 4, 0], [2, 9, 1], [4, 0, 0], [0, 5, 11], [5, 11, 5], [11, 5, 5], [5, 5, 5], [5, 5, 11], [5, 1, 4], [1, 4, 5], [4, 5, 5], [5, 1, 4], [1, 4, 5], [5, 5, 1], [5, 1, 5], [4, 11, 0], [0, 5, 1], [5, 9, 7], [3, 2, 1], [1, 4, 0], [0, 5, 1], [11, 4, 0], [7, 9, 4], [4, 5, 7], [9, 4, 0], [8, 3, 4], [4, 5, 1], [9, 1, 0], [5, 1, 8], [9, 2, 4], [1, 4, 0], [9, 1, 8], [0, 1, 8], [11, 5, 11], [11, 9, 8], [3, 4, 0], [9, 9, 4], [4, 5, 1], [3, 1, 0], [9, 11, 3], [9, 4, 0], [3, 9, 4], [2, 1, 4], [5, 11, 0], [9, 7, 4], [7, 4, 5], [4, 5, 5], [5, 7, 4], [9, 9, 4], [5, 1, 4], [8, 9, 4], [9, 11, 9], [9, 1, 4], [4, 5, 1], [5, 3, 0], [5, 1, 4], [1, 4, 5], [5, 9, 4], [9, 4, 5], [9, 11, 0], [1, 9, 1], [5, 4, 0], [0, 5, 1], [9, 3, 9], [9, 1, 4], [5, 9, 1], [1, 4, 0], [5, 1, 4], [1, 4, 5], [5, 5, 1], [4, 0, 0], [5, 1, 4], [11, 0, 5], [4, 2, 0], [11, 9, 4], [5, 1, 4], [1, 4, 5], [4, 5, 1], [5, 3, 8], [8, 5, 1], [9, 1, 4], [4, 5, 1], [1, 4, 0], [4, 0, 5], [5, 5, 1], [5, 11, 2], [9, 1, 6], [6, 5, 1], [2, 11, 7], [5, 2, 1], [1, 4, 0], [0, 5, 11], [5, 1, 4], [4, 5, 1], [5, 1, 5], [5, 3, 4], [5, 7, 9], [5, 11, 4], [3, 1, 11], [2, 9, 4], [4, 5, 11], [5, 11, 5], [9, 0, 4], [4, 5, 1], [5, 1, 0], [0, 5, 11], [11, 5, 3], [9, 1, 4], [4, 5, 1], [5, 1, 5], [5, 1, 6], [5, 1, 4], [1, 4, 5], [4, 5, 5], [9, 9, 4], [5, 1, 4], [1, 4, 0], [5, 1, 4], [5, 11, 4], [4, 5, 1], [5, 1, 0], [11, 1, 4], [5, 11, 4], [11, 4, 0], [5, 11, 4], [5, 11, 4], [11, 4, 5], [1, 4, 0], [9, 4, 0], [0, 5, 1], [7, 1, 4], [5, 7, 4], [5, 1, 0], [9, 1, 4], [5, 1, 0], [1, 5, 4], [2, 1, 9], [5, 11, 3], [9, 7, 0], [7, 9, 0], [5, 1, 9], [1, 9, 5], [5, 5, 1], [5, 1, 4], [9, 1, 1], [7, 4, 0], [5, 11, 4], [4, 5, 1], [5, 1, 5], [5, 11, 0], [5, 11, 3], [4, 2, 0], [5, 1, 4], [4, 5, 1], [5, 1, 5], [5, 11, 8], [5, 11, 8], [1, 4, 11], [9, 4, 0], [1, 4, 6], [9, 4, 0], [0, 5, 1], [2, 0, 0], [9, 1, 4], [5, 1, 0], [5, 11, 0], [2, 4, 0], [8, 9, 4], [5, 11, 4], [11, 4, 5], [0, 11, 0], [0, 11, 0], [5, 1, 4], [4, 5, 1], [5, 1, 5], [5, 5, 3], [9, 2, 11], [2, 11, 5], [11, 1, 4], [1, 4, 5], [4, 5, 9], [5, 1, 4], [1, 4, 5], [5, 11, 11], [11, 11, 5], [11, 5, 5], [0, 1, 4], [1, 4, 5], [4, 5, 5], [5, 5, 1], [5, 1, 5], [5, 5, 1], [4, 0, 0], [9, 1, 4], [5, 3, 0], [5, 4, 0], [8, 9, 1], [1, 5, 1], [5, 1, 5], [1, 5, 11], [11, 5, 11], [11, 5, 3], [5, 3, 5], [11, 4, 0], [4, 0, 5], [5, 9, 6], [11, 4, 0], [5, 11, 9], [11, 9, 5], [11, 4, 9], [4, 9, 5], [5, 5, 11], [5, 11, 5], [9, 7, 0], [4, 5, 1], [9, 1, 4], [9, 1, 4], [1, 4, 5], [9, 4, 0], [3, 9, 0], [0, 11, 0], [1, 4, 0], [8, 11, 1], [11, 1, 5], [5, 5, 0], [3, 4, 0], [5, 11, 8], [8, 5, 9], [1, 4, 0], [5, 1, 0], [5, 3, 0], [5, 1, 0], [5, 9, 8], [4, 6, 11], [11, 5, 1], [1, 5, 11], [5, 11, 5], [11, 3, 4], [1, 4, 0], [5, 1, 9], [9, 9, 4], [9, 4, 5], [9, 0, 1], [0, 1, 5], [1, 5, 5], [5, 11, 0], [5, 11, 11], [5, 2, 4], [9, 4, 0], [5, 1, 4], [5, 1, 0], [1, 0, 5], [2, 1, 0], [0, 5, 1], [5, 1, 5], [1, 5, 5], [5, 9, 8], [9, 9, 3], [5, 9, 4], [9, 4, 5], [0, 0, 7], [3, 0, 1], [5, 5, 3], [9, 1, 4], [1, 4, 5], [8, 9, 4], [5, 1, 4], [1, 4, 5], [9, 4, 0], [11, 4, 9], [9, 5, 1], [8, 0, 0], [9, 8, 0], [9, 9, 0], [0, 5, 1], [1, 5, 3], [5, 3, 5], [9, 8, 0], [7, 9, 4], [8, 9, 8], [7, 4, 0], [9, 1, 4], [5, 1, 4], [7, 9, 4], [5, 1, 4], [5, 11, 0], [5, 9, 9], [9, 9, 5], [1, 4, 0], [5, 5, 1], [1, 5, 11], [5, 11, 5], [5, 11, 3], [0, 5, 1], [9, 1, 4], [4, 5, 1], [5, 1, 5], [7, 9, 0], [0, 5, 1], [1, 5, 11], [5, 11, 5], [2, 1, 0], [11, 9, 1], [9, 7, 9], [9, 1, 4], [4, 5, 11], [11, 3, 0], [5, 1, 4], [1, 4, 5], [6, 9, 4], [9, 2, 0], [9, 8, 9], [9, 5, 3], [5, 3, 5], [1, 4, 9], [9, 4, 5], [0, 1, 4], [2, 2, 11], [2, 11, 5], [9, 4, 0], [5, 1, 4], [4, 2, 0], [5, 1, 4], [3, 8, 0], [0, 0, 0], [5, 5, 11], [5, 11, 5], [4, 0, 0], [9, 1, 0], [4, 9, 4], [9, 4, 5], [9, 1, 4], [5, 1, 4], [9, 1, 0], [5, 11, 3], [4, 0, 3], [0, 3, 5], [9, 9, 8], [8, 5, 1], [4, 0, 0], [2, 9, 1], [11, 9, 6], [11, 3, 4], [5, 1, 4], [1, 4, 5], [8, 2, 0], [5, 3, 5], [3, 5, 5], [9, 2, 1], [2, 1, 5], [11, 1, 4], [1, 4, 5], [9, 9, 1], [9, 1, 5], [5, 5, 7], [5, 7, 5], [8, 9, 0], [5, 1, 4], [1, 4, 5], [1, 4, 0], [5, 1, 4], [5, 3, 4], [9, 7, 4], [9, 4, 0], [1, 8, 4], [1, 8, 9], [5, 1, 4], [1, 4, 5], [9, 1, 0], [11, 4, 0], [7, 4, 0], [0, 5, 1], [9, 9, 1], [1, 5, 3], [11, 3, 4], [1, 4, 0], [9, 9, 8], [9, 9, 0], [5, 9, 8], [3, 9, 1], [8, 1, 4], [9, 1, 4], [5, 1, 4], [1, 1, 8], [2, 3, 0], [3, 0, 5], [4, 2, 0], [5, 9, 0], [7, 9, 8], [7, 4, 0], [1, 4, 0], [2, 9, 4], [1, 1, 8], [5, 1, 4], [4, 5, 1], [3, 9, 4], [2, 1, 4], [5, 11, 0], [0, 5, 11], [11, 5, 3], [11, 2, 11], [5, 9, 0], [9, 1, 4], [7, 9, 8], [5, 3, 2], [9, 4, 0], [5, 1, 4], [1, 4, 0], [4, 0, 5], [11, 4, 0], [1, 4, 0], [11, 9, 8], [5, 1, 8], [8, 5, 3], [5, 3, 5], [9, 0, 3], [3, 8, 0], [9, 0, 3], [8, 9, 6], [5, 1, 4], [9, 11, 4], [11, 4, 5], [5, 1, 4], [8, 1, 4], [1, 4, 0], [3, 9, 4], [9, 4, 5], [5, 5, 1], [3, 4, 0], [0, 5, 1], [5, 1, 5], [2, 11, 4], [11, 4, 5], [9, 4, 0], [5, 1, 4], [1, 4, 4], [4, 4, 5], [5, 5, 3], [5, 3, 5], [7, 1, 4], [5, 7, 0], [2, 9, 4], [4, 5, 1], [9, 1, 4], [9, 9, 11], [11, 5, 1], [2, 1, 8], [11, 11, 4], [4, 5, 3], [9, 2, 11], [5, 9, 6], [7, 9, 1], [5, 1, 4], [9, 1, 7], [8, 9, 4], [9, 1, 4], [1, 4, 0], [3, 9, 8], [1, 4, 0], [5, 1, 8], [4, 9, 1], [5, 1, 8], [9, 9, 8], [2, 9, 4], [9, 1, 8], [11, 7, 8], [1, 4, 0], [8, 1, 4], [8, 9, 1], [9, 1, 8], [9, 7, 6], [7, 6, 5], [2, 11, 4], [1, 8, 0], [1, 4, 0], [7, 9, 4], [4, 5, 1], [1, 4, 0], [7, 9, 4], [5, 1, 0], [5, 1, 4], [2, 1, 8], [9, 1, 4], [4, 5, 1], [8, 9, 1], [8, 9, 4], [5, 1, 4], [4, 5, 1], [5, 1, 5], [5, 5, 1], [5, 9, 4], [8, 7, 4], [11, 9, 4], [9, 4, 5], [5, 1, 4], [1, 4, 4], [5, 1, 4], [2, 0, 1], [5, 1, 4], [5, 1, 4], [5, 1, 4], [5, 9, 1], [9, 1, 5], [5, 5, 3], [9, 1, 4], [4, 5, 4], [5, 4, 5], [5, 9, 4], [9, 11, 0], [5, 9, 1], [9, 5, 1], [5, 11, 0], [5, 9, 0], [0, 0, 0], [1, 7, 6], [3, 1, 0], [6, 11, 1], [5, 11, 4], [11, 4, 5], [4, 5, 5], [9, 9, 4], [3, 0, 0], [1, 4, 0], [7, 9, 1], [4, 0, 0], [5, 1, 8], [7, 9, 7], [9, 2, 4], [5, 1, 4], [4, 5, 1], [5, 1, 8], [1, 8, 5], [5, 1, 4], [5, 1, 4], [2, 4, 0], [5, 3, 4], [4, 5, 1], [2, 7, 4], [4, 5, 1], [0, 9, 8], [11, 11, 10], [5, 9, 4], [5, 1, 8], [4, 9, 0], [2, 2, 1], [2, 1, 5], [5, 5, 3], [3, 5, 11], [9, 9, 1], [5, 9, 6], [2, 9, 1], [3, 0, 9], [6, 11, 4], [5, 1, 4], [9, 1, 4], [1, 4, 5], [9, 7, 4], [5, 11, 4], [4, 5, 1], [5, 1, 5], [11, 2, 1], [2, 1, 4], [11, 4, 0], [9, 8, 9], [8, 9, 5], [9, 11, 0], [2, 1, 0], [9, 9, 4], [5, 6, 0], [6, 0, 5], [0, 5, 5], [1, 4, 5], [4, 9, 0], [9, 0, 11], [5, 4, 0], [1, 0, 3], [0, 3, 5], [9, 9, 9], [4, 0, 0], [0, 0, 5], [0, 5, 5], [8, 9, 6], [2, 1, 4], [4, 0, 4], [1, 6, 11], [11, 5, 9], [1, 4, 0], [3, 4, 0], [4, 0, 5], [9, 1, 4], [1, 4, 5], [9, 4, 0], [0, 5, 1], [5, 1, 5], [4, 6, 1], [6, 1, 5], [5, 1, 4], [1, 4, 5], [4, 5, 5], [3, 2, 4], [8, 6, 0], [0, 5, 1], [11, 11, 4], [5, 9, 4], [5, 1, 8], [9, 4, 0], [4, 0, 5], [11, 3, 0], [0, 5, 1], [5, 1, 5], [3, 9, 4], [11, 4, 0], [2, 9, 4], [0, 1, 4], [8, 9, 1], [11, 1, 8], [9, 7, 9], [1, 4, 0], [9, 1, 4], [1, 4, 5], [4, 5, 5], [5, 3, 8], [8, 1, 8], [8, 5, 7], [0, 2, 4], [4, 0, 0], [0, 5, 1], [1, 5, 11], [11, 5, 11], [11, 5, 9], [9, 4, 0], [7, 4, 0], [1, 4, 0], [0, 5, 1], [9, 9, 4], [9, 4, 5], [4, 5, 5], [7, 4, 0], [4, 0, 5], [7, 9, 4], [9, 4, 5], [9, 9, 1], [5, 1, 4], [0, 11, 4], [1, 4, 0], [1, 4, 0], [9, 9, 0], [5, 1, 0], [9, 1, 0]]
: MeanShift:  [0 0 0 ... 0 0 0]
: Ward:  [1 1 0 ... 0 1 0]
: Cosine:  [0 0 0 ... 0 0 0]
: Manhattan:  [0 0 0 ... 0 0 0]

With this code:

#+begin_src python
import numpy as np
import json
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D
# Change name of cluster labels to load
labels = np.loadtxt("ward.txt")

with open("encoded_tuples.json") as f:
    d = f.read()

data = json.loads(d)

X = []
Y = []
Z = []
for i in range(len(data)):
    if labels[i] == 0:
        X.append(data[i][0])
        Y.append(data[i][1])
        Z.append(data[i][2])

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.scatter(X,Y,Z, color='r')

X = []
Y = []
Z = []
for i in range(len(data)):
    if labels[i] == 1:
        X.append(data[i][0])
        Y.append(data[i][1])
        Z.append(data[i][2])

ax.scatter(X,Y,Z, color='b')

plt.show()
#+end_src

We produce the following plots of the data colored based on which cluster
they are in. As we went with the default values for the clustering
algorithms, there were only two clusters for data to fall in to. 
 +MeanShift: [[./images/meanshift.png]]
 +Ward: [[./images/ward.png]]
 +Cosine: [[./images/cosine.png]]
 +Manhattan: [[./images/manhattan.png]]
Based on the above images, we can see that cosine and meanshift could not
distinguish any clusters from the data. Meanwhile manhattan was able to
distinguish between two clusters, one much larger than the other. The
distinction was finally most prevelant when running the ward clustering algorithm.

* DONE Grading Scale

This homework is worth 15 points. The grading scale is:


| fraction correctly reviewed and answered | points awarded |
|------------------------------------------+----------------|
| \(\ge 0.95\)                             |             15 |
| 0.90 -- 0.94                             |             14 |
| 0.85 -- 0.89                             |             13 |
| 0.80 -- 0.94                             |             12 |
| 0.75 -- 0.79                             |             11 |
| 0.70 -- 0.74                             |             10 |
| 0.65 -- 0.69                             |              9 |
| 0.60 -- 0.64                             |              8 |
| 0.55 -- 0.59                             |              7 |
| 0.50 -- 0.54                             |              6 |
| 0.45 -- 0.49                             |              5 |
| 0.40 -- 0.44                             |              4 |
| 0.35 -- 0.39                             |              3 |
| 0.30 -- 0.34                             |              2 |
| 0.25 -- 0.29                             |              1 |
| \(< 0.25\)                               |              0 |








* DONE Scoring


|     question | max pts | answer ok? |
|--------------+---------+------------|
|            1 |       1 |            |
|            2 |       1 |            |
|            3 |       2 |            |
|            4 |       2 |            |
|            5 |       2 |            |
|            6 |       7 |            |
|--------------+---------+------------|
|  total score |      15 |            |
|   percentage |         |            |
| total points |         |            |
#+TBLFM: @8$2=vsum(@I..@II)::@8$3=vsum(@I..@II)::@9$3=@-1/@-2$-1



